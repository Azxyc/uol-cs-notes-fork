# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          # Set null output for no matches.
          shopt -s nullglob
          # Initlialising folders.
          rm -rfv docs/comp*/*/
          rm -rfv docs/COMP*/*/
          rm -rf docs/assets/comp*/
          rm -rf docs/assets/COMP*/
          # Creating note folders.
          mkdir -vp docs/{comp105,comp107,comp108,comp109,comp111,comp116,comp112,comp124}/{assessments,lectures,seminars,tutorials,labs,catchup_sessions}/_posts
          # Creating asset folders.
          mkdir -vp docs/assets/{comp105,comp107,comp108,comp109,comp111,comp116,comp112,comp124}/{assessments,lectures,seminars,tutorials,labs,catchup_sessions}
          # Copying notes.
          for i in COMP*/{Assessments,Lectures,Seminars,Tutorials,Labs}/*/*.md
          do
          cp -v "$i" "$(echo "$i" | awk -F/ '{print "docs/" tolower($1) "/" tolower($2) "/_posts"}')"
          done
          for i in COMP*/Catch-up\ Sessions/*/*.md
          do
          cp -v "$i" "$(echo "$i" | awk -F/ '{print "docs/" tolower($1) "/catchup_sessions/_posts"}')"
          done
          # Copying assets.
          for i in COMP*/{Assessments,Lectures,Seminars,Tutorials,Labs}/*/*
          do
          cp -rv "$i" "$(echo "$i" | awk -F/ '{print "docs/assets/" tolower($1) "/" tolower($2)}')"
          done
          for i in COMP*/Catch-up\ Sessions/*/*
          do
          cp -rv "$i" "$(echo "$i" | awk -F/ '{print "docs/assets/" tolower($1) "/catchup_sessions"}')"
          done
          # Removing notes from assets.
          rm -rf docs/assets/*/*/*.md
          # Reformatting maths.
          grep -rliF ' $ ' docs/comp*/*/*/*.md | xargs -i@ sed -i 's/ \$ /\?\?\?\?\?\?/g; s/`\$`/`\?\?\?\?\?\?`/g' @
          grep -rliF ' $! ' docs/comp*/*/*/*.md | xargs -i@ sed -i 's/ \$! /~~~~~~/g; s/`\$!`/`~~~~~~`/g' @
          grep -rliF '$$' docs/comp*/*/*/*.md | xargs -i@ sed -i 's/_{/\&#95;\&#123;/g' @
          grep -rliF '$' docs/comp*/*/*/*.md | xargs -i@ docs/tools/debuck @
          rm -rf docs/comp*/*/_posts/*.bak
          grep -rliF '\' docs/comp*/*/*/*.md | xargs -i@ sed -i 's/\\(/\&#92;(/g; s/\\)/\&#92;)/g; s/\\\[/\&#92;\[/g; s/\\\]/\&#92;\]/g; s/\\{/\&#92;{/g; s/\\}/\&#92;}/g; s/\\\\/\&#92;\&#92;/g; s/\\\$/\&#92;\$/g' @
          grep -rliF '??????' docs/comp*/*/*/*.md | xargs -i@ sed -i 's/`\?\?\?\?\?\?`/`\$`/g; s/\?\?\?\?\?\?/ \$ /g' @
          grep -rliF '~~~~~~' docs/comp*/*/*/*.md | xargs -i@ sed -i 's/`~~~~~~`/`\$!`/g; s/~~~~~~/ \$! /g' @
          # Pushing changes.
          git config user.name bweston6
          git config user.email 35574350+bweston6@users.noreply.github.com
          git add .
          git commit -m "Copying site assets."
          git push
