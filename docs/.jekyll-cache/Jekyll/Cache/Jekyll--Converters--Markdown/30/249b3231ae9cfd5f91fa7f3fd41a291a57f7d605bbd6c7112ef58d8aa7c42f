I"!<h2 id="views-of-ai">Views of AI</h2>
<h3 id="typical-ai-application-areas">Typical AI Application Areas</h3>
<ul>
  <li>Natural Language Processing</li>
  <li>Computer Vision</li>
  <li>Robotics</li>
  <li>Theorem Proving</li>
  <li>Speech Recognition</li>
  <li>Game Playing</li>
  <li>Sematic Web Search</li>
  <li>Diagnosis</li>
</ul>

<h3 id="what-is-ai">What is AI</h3>
<p>The goal of AI is to build machines that perform tasks that normally require human intelligence. This can also be construed as what is new in computing as the computers performing the task can be seen as intelligent.</p>

<p>AI is both science and engineering as it is:</p>

<ul>
  <li>the <em>science</em> of understanding intelligent entities: developing theories/models which attempt to explain and predict the nature of such entities.</li>
  <li>the <em>engineering</em> of such entities.</li>
</ul>

<h3 id="four-views-of-ai">Four Views of AI</h3>
<ul>
  <li>Systems that <em>think</em> like <em>humans</em></li>
  <li>Systems that <em>act</em> like <em>humans</em></li>
  <li>Systems that <em>think rationally</em> (think the correct way)</li>
  <li>Systems that <em>act rationally</em> (act optimal to achieve a goal)</li>
</ul>

<h3 id="thinking-humanly-vs-acting-humanly">Thinking Humanly vs Acting Humanly</h3>
<p>Computer science is concerned with acting intelligently rather than simulating a brain like a cognitive scientist might want. An abstract of this is whether they act intelligently. This is because although an entity might not think intelligently it can appear intelligent by acting intelligently.</p>

<h3 id="turing-test-1950">Turing Test 1950</h3>
<p>A human should not be able to tell whether an entity is a human or a machine.</p>

<p>No system has yet passed the test. In addition, it is not always the most practical or foolproof as those who are the most successful rely on tricks.</p>

<h3 id="thinking-and-acting-rationally">Thinking and Acting Rationally</h3>

<p>This is the focus on making systems that act how we think that they should act. To do this we can use techniques from logic and probability theory to create machines that can reason correctly.</p>

<ul>
  <li>Acting Rationally - Acting in such a way to achieve oneâ€™s goals optimally and given oneâ€™s beliefs.</li>
</ul>

<p>As a result of this view, we can use techniques from <em>economics/game theory</em> to investigate and create machines that act rationally.</p>

<h2 id="history-of-ai">History of AI</h2>

<h3 id="combinatorial-explosion---chess">Combinatorial Explosion - Chess</h3>

<p>For a simple game it is possible to write a program that will select the best possible move from all possible moves. However in chess there are an exponential number of moves after each move.</p>

<p><strong>The fact that a program can find a solution in principle
does not mean that the program will be able to find it in practice.</strong></p>

<h3 id="expert-systems">Expert systems</h3>

<ul>
  <li>As general purpose brute force techniques donâ€™t work we should use knowledge rich solutions.
    <ul>
      <li>These are very specialised systems with vast amounts of knowledge about a tightly focused domain.</li>
    </ul>
  </li>
</ul>

<p>The main problems with expert systems are:</p>

<ul>
  <li>The knowledge elicitation bottleneck
    <ul>
      <li>Finding knowledge from experts is very time consuming and expensive</li>
    </ul>
  </li>
  <li>Lack of trust in recommendations given by expert systems
    <ul>
      <li>The main problem as you donâ€™t know how the system has came to the solution.</li>
    </ul>
  </li>
</ul>
:ET