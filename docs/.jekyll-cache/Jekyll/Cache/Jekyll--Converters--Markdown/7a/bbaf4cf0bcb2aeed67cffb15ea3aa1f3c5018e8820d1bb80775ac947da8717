I"#<p>Programming languages can be split into imperative and functional. This course will focus on the functional language of Haskell.</p>

<ul>
  <li>Imperative programs tell the computer how to compute the answer.
    <ul>
      <li>Declare variables</li>
      <li>Go around a loop</li>
      <li>Do the same instructions each time</li>
    </ul>
  </li>
  <li>Functional programming languages follow mathematic definitions and focus on recursion. No variables are declared and no explicit loops.
    <ul>
      <li>No variables
        <ul>
          <li>No such thing as a variable in functional programming.</li>
        </ul>
      </li>
      <li>No explicit loops
        <ul>
          <li>using recursive functions.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>Functional programming is a style of programming the isnâ€™t dependant on the language that is is written in. Functional programming languages are built to support this style.</p>

<h2 id="course-focus">Course Focus</h2>
<p>The course will focus on functional languages but we will compare the two styles of programming.</p>

<p>Haskell is a pure functional languages as you cannot program in an imperative style easily.</p>

<h2 id="why-functional-languages-are-important">Why Functional Languages are Important</h2>
<ol>
  <li>Their usefulness is increasing
    <ul>
      <li>Multi-core systems and GPUs prefer highly parallel code which functional programs are.</li>
    </ul>
  </li>
  <li>Learning the functional style can make you a better imperative programmer.
    <ul>
      <li>Sometimes the functional style is more appropriate.</li>
      <li>Many imperative languages support functional styles.</li>
    </ul>
  </li>
  <li>Functional programming is a good preparation fo a computer science education.
    <ul>
      <li>Algorithms in CS are often presented in a functional way.</li>
      <li>Functional programming helps you translate the algorithms into functional code.</li>
      <li>The functional paradigm is also used in the analysis of algorithms.</li>
    </ul>
  </li>
</ol>
:ET