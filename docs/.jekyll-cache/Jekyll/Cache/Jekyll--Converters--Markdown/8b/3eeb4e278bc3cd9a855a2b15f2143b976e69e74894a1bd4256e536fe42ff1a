I"æ<ul>
  <li>Use problem-specific knowledge to make the search more efficient.</li>
  <li>Based on your knowledge, select the most promising path first.</li>
  <li>Rather than trying all possible search paths, you try to focus on paths  that get you nearer to the goal state according to your estimate.</li>
</ul>

<h2 id="heuristics">Heuristics</h2>
<ul>
  <li>They estimate the oct of cheapest path form a state to a goal state</li>
  <li>We have a <strong>heuristic function</strong> \(h:\text{States}\rightarrow\text{real numbers}\) which estimates the cost of going form that state to the goal. $h$ can be any function by $h(s) = 0$ if $s$ is a goal.</li>
  <li>In route finding, heuristic might be straight line distance from node to destination. Hence:
    <ul>
      <li>Greedy search expands the path that appears to be closest to the goal.</li>
    </ul>
  </li>
</ul>

<h3 id="greedy-search">Greedy Search</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Input: a start state s_0
		for each state s the successors of s
		a test goal(s) checking whether s is a goal state
		g(s_0...s_k) for every path s_0...s_k
		
Set frontier := {s_0}
while frontier is not empty do
		select and remove from the frontier the path s_0...s_k
		with h(s_k) minimal
		if goal(s_k) then
			return s_0...s_k (and terminate)
		else for every successor s of s_k and s_0...s_ks to frontier
		end if
end while
</code></pre></div></div>

<h4 id="example">Example</h4>
<p>A greedy search is completed on the following graph:</p>

<pre><code class="language-mermaid">graph TD
S[S, h = 8] --&gt;|1| A[A, h = 8]
S --&gt;|5| B[B, h = 4]
S --&gt;|8| C[C, h = 3]
A --&gt;|3| D[D, h = Infty]
A --&gt;|7| E[E, h = Infty]
A --&gt;|9| G[G, h = 0]
B --&gt;|4| G[G, h = 0]
C --&gt;|5| G[G, h = 0]
</code></pre>

<table>
  <thead>
    <tr>
      <th>Expanded Paths</th>
      <th>Frontier</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Â </td>
      <td>S:8</td>
    </tr>
    <tr>
      <td>S is not goal</td>
      <td>SA:8, SB:4, SC:3</td>
    </tr>
    <tr>
      <td>SC is not goal</td>
      <td>SA:8, SB:4, SCG:0</td>
    </tr>
    <tr>
      <td>SCG is goal</td>
      <td>SA:8, SB:4</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>Always expand the state which is closest to the goal as estimated by the heuristic function.</li>
  <li>This uses much less iterations that the uniform cost search but it is not the shortest path.</li>
</ul>

<h4 id="properties-of-greedy-search">Properties of Greedy Search</h4>
<ul>
  <li>Sometimes find solutions quickly</li>
  <li>Doesnâ€™t always find the best solution</li>
  <li>May not fins a solution if the is one
    <ul>
      <li>Incomplete</li>
    </ul>
  </li>
  <li>Susceptible to false starts</li>
  <li>Only looking at current state
    <ul>
      <li>Only takes into account estimates which are based on how close they are to the destination and not how long the path to the next step is.</li>
      <li>Ignores past states.</li>
    </ul>
  </li>
</ul>
:ET