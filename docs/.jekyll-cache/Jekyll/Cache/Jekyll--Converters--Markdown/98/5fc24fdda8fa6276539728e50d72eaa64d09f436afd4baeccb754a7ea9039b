I"‚†
<h1 id="comp109---logic---2"><a href="/UoL/comp109/lectures/2020/11/30/2.html">COMP109 - Logic - 2</a></h1>
<p class="info">This lecture is very similar to COMP111‚Äôs <a href="/UoL/comp111/lectures/2020-11-12-2">truth values</a> lecture. View that lecture for all truth tables.</p>

<h2 id="truth-values">Truth Values</h2>
<p>Interpretations are a way of assigning values to propositions which may vary depending on the situation or person who answers them.</p>

<p>An interpretation \(I\) is a function which assigns to any atomic proposition \(p_i\) a truth value:</p>

<p>\[I(p_i)\in \{0,1\}\]</p>

<ul>
  <li>If \(I(p_i)=1\), then \(p_i\) is called <strong>true</strong> under the interpretation \(I\).</li>
  <li>If \(I(p_i)=0\), then \(p_i\) is called <strong>false</strong> under the interpretation \(I\).</li>
</ul>

<p>Given an assignment \(I\) we can compute the truth value of compute formulas step by step using so-called truth tables.</p>

<h3 id="implication">Implication</h3>

<p>The implication \((P\Rightarrow Q)\) of \(P\)  and \(Q\):
 \[\text{If } P \text{ then } Q\]</p>

<h4 id="truth-table">Truth Table</h4>

<table>
  <thead>
    <tr>
      <th style="text-align: center">\(P\)</th>
      <th style="text-align: center">\(Q\)</th>
      <th style="text-align: center">\((P\Rightarrow Q)\)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">1</td>
      <td style="text-align: center">1</td>
    </tr>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">0</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">0</td>
      <td style="text-align: center">1</td>
      <td style="text-align: center">1</td>
    </tr>
    <tr>
      <td style="text-align: center">0</td>
      <td style="text-align: center">0</td>
      <td style="text-align: center">1</td>
    </tr>
  </tbody>
</table>

<p>Consider this table with the proposition \(P\) being a promise. If you don‚Äôt make a promise but you fulfil it anyway then you aren‚Äôt breaking that promise.</p>

<p>Another example would be the following statement:</p>

<ul>
  <li>If a number is divisible by 6 then it is divisible by 3.
    <ul>
      <li>If it is not divisible by 6 but still divides by 3, this does not invalidate the proposition.</li>
    </ul>
  </li>
</ul>

<h1 id="comp109---logic---1"><a href="/UoL/comp109/lectures/2020/11/30/1.html">COMP109 - Logic - 1</a></h1>
<p class="info">This topic is very similar to the subjects covered in COMP111‚Äôs <a href="/UoL/comp111/lectures/2020-11-12-1">propositional logic</a>. As result I will only be noting down significant differences.</p>

<p>Logic is concerned with the truth a falsity of statements. The question is when does a statement follow from a set of statements.</p>

<h2 id="propositional-logic">Propositional Logic</h2>
<p>Propositional logic is logic which only concerns itself with whether something is true or false. Other languages differ themselves as they deal with uncertainties.</p>

<p>A proposition is a statement that can either be true or false. A statement like \(4+5\) is not a proposition as it doesn‚Äôt give a true or false answer.</p>

<h3 id="compound-propositions">Compound Propositions</h3>
<p>More complex propositions are formed using logical connectives (also called Boolean connectives).</p>

<p>The basic connectives are:</p>

<ol>
  <li>\(\neg\): Negation (read ‚Äúnot‚Äù).</li>
  <li>\(\wedge\): Conjunction (read ‚Äúand‚Äù).</li>
  <li>\(\vee\): Disjunction (read ‚Äúor‚Äù).
    <ul>
      <li>These are the scientific names and they make a difference between the english and mathematical words.</li>
    </ul>
  </li>
  <li>\(\Rightarrow\): Implication (read ‚Äúif‚Ä¶then‚Äù).
    <ul>
      <li>In other schools this may be written as \(\rightarrow\) or as \(\subseteq\).</li>
    </ul>
  </li>
  <li>\(\Leftrightarrow\): Equivalence (read ‚Äúif, and only if,‚Äù).
    <ul>
      <li>Similar to 4. the notation is not as set as 1,2 and 3. This may be written as \(\leftrightarrow\) or \(\equiv\).</li>
    </ul>
  </li>
</ol>

<p>Propositional formed using these logical connectives are called compound propositions; otherwise atomic propositions.</p>

<ul>
  <li>A propositional formula is either an atom ic or compound proposition.</li>
</ul>

<h1 id="comp109---relations---10"><a href="/UoL/comp109/lectures/2020/11/27/2.html">COMP109 - Relations - 10</a></h1>
<p>All the relations we have been looking at so far have been binary relations however this can be generalised for greater numbered relations.</p>

<h2 id="n-ary-relations">\(n\)-ary Relations</h2>
<p>The Cartesian product \(A_1\times A_2\times \ldots \times A_n\) of sets \(A_1,A_2,\ldots,A_n\) is defined by:</p>

<p>\[A_1\times A_2\times \ldots \times A_n=\{(a_1,\ldots,a_n)\ \vert\ a_1\in A_1,\ldots,a_n\in A_n\}\]</p>

<p>Here \((a_1,\ldots,a_n)=(b_1,\ldots,b_n\) if and only if \(a_i=b_i\) for all \(1\leq i\leq n\).</p>

<p>An \(n\)-ary relation is a subset of \(A_1\times\ldots A_n\)</p>

<h3 id="databases-and-relations">Databases and Relations</h3>
<p>A database table \(\approx\) relation.</p>

<h4 id="table-1-textstudents">Table 1 \(\text{Students}\)</h4>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Student_name</th>
      <th style="text-align: center">ID_number</th>
      <th style="text-align: left">Major</th>
      <th style="text-align: center">GPA</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Ackermann</td>
      <td style="text-align: center">231455</td>
      <td style="text-align: left">Computer Science</td>
      <td style="text-align: center">3.88</td>
    </tr>
    <tr>
      <td style="text-align: left">Adams</td>
      <td style="text-align: center">888323</td>
      <td style="text-align: left">Physics</td>
      <td style="text-align: center">3.45</td>
    </tr>
    <tr>
      <td style="text-align: left">Chou</td>
      <td style="text-align: center">102147</td>
      <td style="text-align: left">Computer Science</td>
      <td style="text-align: center">3.49</td>
    </tr>
    <tr>
      <td style="text-align: left">Goodfriend</td>
      <td style="text-align: center">453876</td>
      <td style="text-align: left">Mathematics</td>
      <td style="text-align: center">3.45</td>
    </tr>
    <tr>
      <td style="text-align: left">Rao</td>
      <td style="text-align: center">678543</td>
      <td style="text-align: left">Mathematics</td>
      <td style="text-align: center">3.9</td>
    </tr>
    <tr>
      <td style="text-align: left">Stevens</td>
      <td style="text-align: center">786576</td>
      <td style="text-align: left">Psychology</td>
      <td style="text-align: center">2.99</td>
    </tr>
  </tbody>
</table>

<p>This student table is a subset of the Cartesian product of four sets containing names, ID numbers, subject and GPA. We can then write these properties in tuples in the subset:</p>

<p>\[\text{Students}=\{\text{(Ackerman, 231455, Computer Science, 3.88)}\ldots\}\]</p>

<h2 id="unary-relations">Unary Relations</h2>
<p>Unary relation are just subsets of a set.</p>

<h3 id="example">Example</h3>
<p>The unary relation \(\text{EvenPositiveIntegers}\) on the set \(\Bbb{Z^+}\) of positive integers is:</p>

<p>\[\{x\in\Bbb{Z^+}\ \vert\ x \text{ is even}\}\]</p>

<p>This shows that a unary relation is just a list of items in a set the satisfy a property.</p>

<h1 id="comp109---relations---9"><a href="/UoL/comp109/lectures/2020/11/27/1.html">COMP109 - Relations - 9</a></h1>
<h2 id="partial-orders">Partial Orders</h2>
<p>A binary relation \(R\) on set \(A\) which is reflexive, transitive and antisymmetric is called  a partial order.</p>

<p>Partial orders are important in situations where we wish to characterise precedence.</p>

<h3 id="examples">Examples</h3>
<ul>
  <li>The relation \(\leq\) on the set of \(\Bbb{R}\) of real numbers.</li>
  <li>The relation \(\subseteq\) on \(\text{Pow}(A)\).</li>
  <li>‚ÄúIs a divisor of‚Äù on the set \(\Bbb{Z^+}\) of positive integers.</li>
</ul>

<h3 id="example---job-scheduling">Example - Job Scheduling</h3>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Task</th>
      <th style="text-align: center">Immediate Dependencies</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">¬†</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">1</td>
    </tr>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">1</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">2</td>
    </tr>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">2, 3</td>
    </tr>
    <tr>
      <td style="text-align: center">6</td>
      <td style="text-align: center">4</td>
    </tr>
    <tr>
      <td style="text-align: center">7</td>
      <td style="text-align: center">2, 3</td>
    </tr>
    <tr>
      <td style="text-align: center">8</td>
      <td style="text-align: center">4, 5</td>
    </tr>
    <tr>
      <td style="text-align: center">9</td>
      <td style="text-align: center">6, 7, 8</td>
    </tr>
  </tbody>
</table>

<pre><code class="language-mermaid">graph LR
1[Task 1 - 7 Hours] --&gt; 2[Task 2 - 6 Hours]
1 --&gt; 3[Task 3 - 3 Hours]
2 --&gt; 4[Task 4 - 6 Hours]
2 --&gt; 5[Task 5 - 3 Hours]
3 --&gt; 5
4 --&gt; 6[Task 6 - 1 Hour]
2 --&gt; 7[Task 7 - 1 Hour]
3 --&gt; 7
4 --&gt; 8[Task 8 - 2 Hours]
5 --&gt; 8
6 --&gt; 9[Task 9 - 5 Hours]
7 --&gt; 9
8 --&gt; 9
</code></pre>

<h3 id="predecessors-in-partial-orders">Predecessors in Partial Orders</h3>
<p>if \(R\) is a partial order on a set \(A\) and \(xRy, x\neq y\) we call \(x\) a <strong>predecessor</strong> of \(y\).</p>

<p>If \(x\) is a predecessor of \(y\) and there is no \(z\in\{x,y\}\) for which \(xRy\) and \(zRy\), we call \(x\) and <strong>immeditate predecessor</strong> of \(y\).</p>

<pre><code class="language-mermaid">graph LR
subgraph R
y -.-&gt; z
z -.-&gt; x
x --&gt; y
end
</code></pre>

<p class="info">In this graph if you can see no \(z\) in-between \(x\) and \(y\) then \(y\) is an immediate predecessor of \(x\).</p>

<h4 id="integer-example">Integer Example</h4>
<p>For the function \(\leq\) on the set \(\Bbb{Z}\) the immediate predecessor of a number \(n\) is \(n-1\).</p>

<pre><code class="language-mermaid">graph LR
subgraph Z
1[n-1] --&gt; 2[n]
end 
</code></pre>

<h4 id="hasse-diagram">Hasse Diagram</h4>
<p>The Hasse Diagram of a partial order is a digraph. The vertices of the digraph are the elements of the partial order, and the edges of the digraph are given by the ‚Äúimmediate predecessor‚Äù relation.</p>

<p>This is an example for the bit vector representation of a set containing 3 elements. Each relation is a subset relation:</p>

<pre><code class="language-mermaid">graph BT
0[0,0,0] --- 1[0,0,1]
0 --- 2[0,1,0]
0 --- 4[1,0,0]
1 --- 3[0,1,1]
1 --- 5[1,0,1]
2 --- 3
2 --- 6[1,1,0]
4 --- 5
4 --- 6
3 --- 7[1,1,1]
5 --- 7
6 --- 7
</code></pre>

<p class="info">It is typical to assume that the arrow pointing upwards.</p>

<p>This diagram notation saves us from having to draw all the reflexive links and also all of the dependency links by just drawing the <strong>immediate dependency</strong>.</p>

<h2 id="total-orders">Total Orders</h2>
<p>A binary relation \(R\) on a set \(A\) is a total order if it is a partial order such that any \(x,y\in A,xRy\) or \(yRx\).</p>

<p class="info">This means that for any relation you can always compare them.</p>

<p>The Hasse diagram of a total order is a chain.</p>

<p class="info">This means that there are no splits as splits mean that they aren‚Äôt comparable.</p>

<h3 id="examples-1">Examples</h3>
<ul>
  <li>The relation \(\leq\) on the set \(\Bbb{R}\) of real numbers.</li>
  <li>The usual lexicographical ordering on words in a dictionary.</li>
  <li>The relation ‚Äúis a divisor of‚Äù is <strong>not</strong> a total order.</li>
</ul>

<h1 id="comp109---relations---8"><a href="/UoL/comp109/lectures/2020/11/26/1.html">COMP109 - Relations - 8</a></h1>
<h2 id="equivalence-relations">Equivalence Relations</h2>
<p>A binary relation \(R\) on a set \(A\) is called an equivalence relation if it is <strong>reflective</strong>, <strong>transitive</strong> and <strong>symmetric</strong>.</p>

<p>This is the same as \(x=y\) in that \(x\) has the same property as \(y\).</p>

<h3 id="example-1">Example 1</h3>
<p>The relation \(R\) on the non-zero integers given by \(xRy\) if \(xy&gt;0\).</p>

<p class="info">This means that the relation is satisfied if \(x\) and \(y\) are both positive or both negative.</p>

<ol>
  <li>
    <p>Reflexivity: \(\forall x\in \Bbb{Z}-\{0\}\)</p>

    <p>\(x\times x=x^2\)</p>
  </li>
  <li>Symmetry: \(\forall x,y\in \Bbb{Z}-\{0\}\text{ if }x\times y&gt;0\text{ then } y\times x =x\times y&gt;0\)</li>
  <li>
    <p>Transitivity: \(\forall x,y,z\in \Bbb{Z}-\{0\}\text{ if } xRy\text{ and }yRz \text{ then } xRz\)</p>

    <p class="warning">This is a statement which must be proved in order to be valid. See below.</p>

    <p>Suppose that \(x,y,z\) are particular but arbitrarily chosen non-zero numbers such that \(x\times y&gt;0\) and \(y\times z&gt;0\).</p>

    <p>Case 1 - \(y&gt;0\)</p>

    <p>\(y&gt;0\Rightarrow x&gt;0,z&gt;0\Rightarrow x\times z&gt;0\)</p>

    <p>Case 2 - \(y&lt;0\)</p>

    <p>\(y&lt;0\Rightarrow x&lt;0,z&lt;0\Rightarrow x\times z &gt;0\)</p>
  </li>
</ol>

<h3 id="example">Example</h3>
<p>Let \(f:A\rightarrow B\) be a function. Define a relation \(R\) on \(A\) by:</p>

<p>\[a_1Ra_2\Leftrightarrow f(a_1)=f(a_2)\]</p>

<p>\(A\) is a set of cars,  \(B\) is the set of real numbers, and \(f\) assigns to any car in \(A\) its length. Then \(a_1Ra_2\) if and only if \(a_1\) and \(a_2\) are of the same length.</p>

<p>In this case the length of the car is mapped to a real number. They could also be mapped to a word such as \(\text{long}\).</p>

<h2 id="partition-of-a-set">Partition of a Set</h2>
<p>A partition of a set \(A\) is a collection of non-empty subsets \(A_1,\ldots A_n\) of \(A\) satisfying:</p>

<ul>
  <li>\(A=A-1\cup A_2\cup\ldots\cup A_n\).</li>
  <li>\(A_i\cap A_j=\emptyset\) for \(i\neq j\).</li>
</ul>

<p>The \(A_i\) are called the blocks of the partition.</p>

<pre><code class="language-mermaid">graph TD
subgraph A
A1
A2
A3
A4
end
</code></pre>

<p class="info">This set \(A\) has four blocks and the four blocks cover every element in the set \(A\).</p>

<p>This is the same as example 1 where the relation split the set of non-zero real numbers into two blocks of positive and negative numbers.</p>

<h2 id="equivalence-class">Equivalence Class</h2>
<p>The equivalence class \(E_x\) of any \(x\in A\) is defined by:</p>

<p>\[E_x=\{y\vert yRx\}\]</p>

<p>From the example before, the equivalence class of any positive integer is the class of positive integers and the equivalence class of any negative integer is the class of all negative integers.</p>

<h2 id="connecting-partitions-and-equivalence-relations">Connecting Partitions and Equivalence Relations</h2>
<h3 id="statement-1">Statement 1</h3>
<p>Let \(R\) be an equivalence relation on a non-empty set \(A\). Then the equivalence classes \(\{E_x\vert x\in A\}\) form a partition of \(A\).</p>

<h4 id="proof-optional">Proof (Optional)</h4>
<p>The proof is in four parts:</p>

<ol>
  <li>
    <p>We show that the equivalence classes \(E_x=\{y\vert yRx\},x\in A\), are non-empty subsets of \(A\): by definition, each \(E_x\) is a subset of \(A\). Since \(R\) is reflexive, \(xRx\). Therefore \(x\in E_x\) and so \(E_x\) is non-empty.</p>

    <p class="info">This means that no equivalence class is not empty. This is because in a reflexive relation there are links to every element.</p>
  </li>
  <li>
    <p>We show that \(A\) is the union of equivalence classes \(E_x,x\in A\): We know that \(E_x\subseteq A\), for all \(E_x, x\in A\). Then \(x\in E_x\). So, \(A\) is a subset of the union of the equivalence classes.</p>

    <p class="info">This means that the union of all the classes forms the full set and that they don‚Äôt share any elements.</p>
  </li>
  <li>We show that if \(xRy\) then \(E_x=E_y\): Suppose that \(xRy\) and let \(z\in E_x\). Then \(zRx\) and \(xRy\). Since \(R\) is a <strong>transitive</strong> relation, \(zRy\). Therefore, \(z\in E_y\). We have shown that \(E_x\subseteq E_y\). An analogous argument shows that \(E_y\subseteq E_x\). So, \(E_x=E_y\).</li>
  <li>
    <p>We show that any two distinct equivalence classes are disjoint: To this end we show that if two equivalence classes are not disjoint then they are identical. Suppose \(E_x\cup E_y\neq \emptyset\). Take a \(z\in E_x\cap E_y\). Then, \(zRx\) and \(zRy\). Since \(R\) is symmetric, \(xRZ\) and \(zRy\). Bu then, by transitivity of \(R\), \(xRy\). Therefore, by 3., \(E_x=E_y\)</p>

    <p class="info">These two mean that there can be no different partitions that overlap but don‚Äôt contain the same items. By this they must be the same equivalence class or be disjoint (have no elements in common).</p>
  </li>
</ol>

<h3 id="statement-2">Statement 2</h3>
<p>Suppose that \(A_1,\ldots,A_n\) is a partition of \(A\). Define a relation \(R\) on \(A\) by setting: \(xRy\) of an only if there exists \(i\) such that \(1\leq i\leq n\) and \(x,y\in  A_i\). Then \(R\) is an equivalence relation.</p>

<h4 id="proof-optional-1">Proof (Optional)</h4>
<ul>
  <li>Reflexivity: if \(x\in A\), then \(x\in A_i\) for some \(i\). Therefore \(xRx\).</li>
  <li>Transitivity: if \(xRy\) and \(yRz\), then there exists \(A_i\) and \(A_j\) such that \(x,y\in A_i\) and \(y,z\in A_j\). \(y\in A_i\cap A_j\) implies \(i=j\). Therefore \(x,z\in A_i\) which implies \(xRz\).</li>
  <li>Symmetry: if \(xRy\), then there exist \(A_i\) such that \(x,y\in A_i\). Therefore \(yRx\).</li>
</ul>

<h3 id="application---rational-numbers">Application - Rational Numbers</h3>
<p>From what we have learned you can define the concept of rational numbers based on the set of integers.</p>

<p>\(r\) is rational if \(r=\frac{k}{k}\), where \(k,l\) are integers and \(l\neq 0\).</p>

<p>Evidently, \(\frac{1}{2}=\frac{2}{4}=\frac{3}{6}=\ldots\)</p>

<p>Consider the set \(A=\{(a,b)\in\Bbb{Z\times Z}\vert b\neq0\}\) and relation \(R\) on \(A\) defined as:</p>

<p>\[(a,b)R(c,d)\Leftrightarrow ad=bc\]</p>

<ul>
  <li>\(R\) is an equivalence relation on\(A\) and the set of all equivalence classes of.</li>
  <li>\(R\) is the set of rationals</li>
</ul>

<p>In other words:</p>

<p>\[\Bbb{Q}=\{E_x\vert x\in A\}\]</p>

<h1 id="comp109---relations---7"><a href="/UoL/comp109/lectures/2020/11/25/2.html">COMP109 - Relations - 7</a></h1>
<h2 id="transitive-closure">Transitive Closure</h2>
<p>Given a binary relation \(R\) on a set \(A\) the transitive closure \(R^*\) of \(R\) is the (uniquely determined) relation on \(A\) with the following properties:</p>

<ul>
  <li>\(R^*\) is transitive.</li>
  <li>
    <p>\(R\subseteq R^*\).</p>

    <p class="info">All links you find in \(R\) you should also find in \(R^*\).</p>
  </li>
  <li>If \(S\) is a transitive relation on \(A\) and \(R\subseteq S\), then \(R^*\subseteq S\).</li>
</ul>

<h3 id="simple-example">Simple Example</h3>
<p>You are given the following links. What links are missing to make the relation transitive.</p>

<pre><code class="language-mermaid">graph LR
a((a)) --&gt; b((b))
b --&gt; c((c))
</code></pre>

<p>As there is an arrow from \(a\) to \(b\) and an arrow from \(b\) to \(c\) there should be and arrow from \(a\) to \(c\) to make this transitive.</p>

<pre><code class="language-mermaid">graph LR
a((a)) --&gt; b((b))
b --&gt; c((c))
a -.-&gt; c
</code></pre>

<h3 id="example-1">Example 1</h3>
<p>Let \(A=\{1,2,3\}\). Find the transitive closure of:</p>

<p>\[R=\{(1,1),(1,2),(1,3),(2,3),(3,1)\}\]</p>

<p>This relation has the following graph:</p>

<pre><code class="language-mermaid">graph LR
1((1)) --&gt; 1
1 --&gt; 2((2))
1 --&gt; 3((3))
2 --&gt; 3
3 --&gt; 1
</code></pre>

<p>You should add the following links:</p>

<pre><code class="language-mermaid">graph LR
1((1)) --&gt; 1
1 --&gt; 2((2))
1 --&gt; 3((3))
2 --&gt; 1
3 --&gt; 2
2 --&gt; 3
3 --&gt; 1
3 --&gt; 3
2 --&gt; 2
</code></pre>

<h2 id="transitivity-and-composition">Transitivity and Composition</h2>
<p>A relation \(S\) is transitive if and only if \(S\circ S\subseteq S\). This is because:</p>

<p>\[S\circ S=\{(a,c)\vert \text{ exists } b \text{ such that } aSb \text{ and } bSc\}\]</p>

<p class="info">This is the definition of what the composition of a relation is.</p>

<p>Let \(S\) be a relation. Set \(S^1=S,S^2=S\circ S,S^3=S\circ S\circ S\circ S\) and so on.</p>

<h3 id="theorem">Theorem</h3>
<p>Denote by \(S^<em>\) the transitive closure of \(S\). Then \(xS^</em>y\) if and only if there exists \(n&gt;0\) such that \(xS^ny\).</p>

<p class="info">This theorem states that by repeating Warshall‚Äôs algorithm on your matrix until there is no change then you will reach transitive closure for that relational matrix.</p>

<h2 id="transitive-closure-in-matrix-form">Transitive Closure in Matrix Form</h2>
<p>The relation \(R\) on the set \(A=\{1,2,3,4,5\}\) is represented by the matrix:</p>

<p>\[
\begin{bmatrix}
1&amp;0&amp;0&amp;1&amp;0\\
0&amp;1&amp;0&amp;0&amp;1\\
0&amp;0&amp;1&amp;0&amp;0\\
1&amp;0&amp;1&amp;0&amp;0\\
0&amp;1&amp;0&amp;1&amp;0
\end{bmatrix}
\]</p>

<p>Determine the matrix \(R\circ R\) and hence explain why \(R\) is not transitive.</p>

<p>To compute this we transpose the row \(i\) onto the column \(j\) and see if there are two ones in the same position. If this is the case then the resultant matrix has a 1 in row \(i\) and column \(j\). If not then there is a zero:</p>

<p>\[
\begin{bmatrix}
1&amp;0&amp;0&amp;1&amp;0\\
0&amp;1&amp;0&amp;0&amp;1\\
0&amp;0&amp;1&amp;0&amp;0\\
1&amp;0&amp;1&amp;0&amp;0\\
0&amp;1&amp;0&amp;1&amp;0
\end{bmatrix}
\begin{bmatrix}
1&amp;0&amp;0&amp;1&amp;0\\
0&amp;1&amp;0&amp;0&amp;1\\
0&amp;0&amp;1&amp;0&amp;0\\
1&amp;0&amp;1&amp;0&amp;0\\
0&amp;1&amp;0&amp;1&amp;0
\end{bmatrix}=
\begin{bmatrix}
1&amp;0&amp;1&amp;1&amp;0\\
0&amp;1&amp;0&amp;1&amp;1\\
0&amp;0&amp;1&amp;0&amp;0\\
1&amp;0&amp;1&amp;1&amp;0\\
1&amp;1&amp;1&amp;0&amp;1
\end{bmatrix}
\]</p>

<p>\(R\) is not transitive as \(R^2\neq R\)</p>

<p class="info">This is the same as Warshall‚Äôs Algorithm. In this algorithm you iterate through every item in each column and row and each column and row. If there is a match you put a <code class="language-plaintext highlighter-rouge">1</code> in the resultant matrix and if there is not then you put a <code class="language-plaintext highlighter-rouge">0</code>.</p>

<h1 id="comp109---relations---6"><a href="/UoL/comp109/lectures/2020/11/25/1.html">COMP109 - Relations - 6</a></h1>
<h2 id="digraph-representation">Digraph Representation</h2>
<p>In the directed graph representation, \(R\) is:</p>

<ul>
  <li><strong>Reflexive</strong> if there is always an arrow from every vertex to itself.</li>
  <li><strong>Symmetric</strong> if whenever there is an arrow from \(x\) to \(y\) there is also an arrow from \(y\) to \(x\).</li>
  <li><strong>Antisymmetric</strong> if  whenever there is an arrow from \(x\) to \(y\) and \(x\neq y\), then there is no arrow from \(y\) to \(x\).</li>
  <li><strong>Transitive</strong> if whenever there is an arrow from \(x\) to \(y\) and from \(y\) to \(z\) there is also an arrow from \(x\) to \(z\).</li>
</ul>

<h3 id="example-1">Example 1</h3>
<p>Let \(A=\{1,2,3\},R_1=\{(1,1),(2,2),(3,3),(2,3),(3,2)\}\)</p>

<pre><code class="language-mermaid">graph TD
1((1)) --&gt; 1
2((2)) --&gt; 2
3((3)) --&gt; 3
2 --&gt; 3
3 --&gt; 2
</code></pre>

<ul>
  <li>Reflective \(\forall x:xRx\)
    <ul>
      <li>True</li>
    </ul>
  </li>
  <li>Symmetric \(\forall x,y: xRy\Rightarrow yRx\)
    <ul>
      <li>True</li>
    </ul>

    <p class="info">If two items, such as 1 and 2, are not connected they are not obligated to connect back. The lack of a connection doesn‚Äôt break this property.</p>
  </li>
  <li>Antisymmetric \(\forall x,y:xRy,yRx\Rightarrow x=y\)
    <ul>
      <li>False</li>
    </ul>
  </li>
  <li>Transitive \(\forall x,y,z:xRy,yRz\Rightarrow xRz\)
    <ul>
      <li>True</li>
    </ul>
  </li>
</ul>

<h3 id="example-2">Example 2</h3>
<p>Let \(A=\{1,2,3\},R_1=\{(2,2),(2,3),(3,2),(3,3)\}\)</p>

<pre><code class="language-mermaid">graph TD
1((1))
2((2)) --&gt; 2
3((3)) --&gt; 3
2 --&gt; 3
3 --&gt; 2
</code></pre>

<ul>
  <li>Reflective \(\forall x:xRx\)
    <ul>
      <li>False</li>
    </ul>
  </li>
  <li>Symmetric \(\forall x,y: xRy\Rightarrow yRx\)
    <ul>
      <li>True</li>
    </ul>
  </li>
  <li>Antisymmetric \(\forall x,y:xRy,yRx\Rightarrow x=y\)
    <ul>
      <li>False</li>
    </ul>

    <p class="info">If there are two nodes with a double arrow then this property is automatically broken.</p>
  </li>
  <li>Transitive \(\forall x,y,z:xRy,yRz\Rightarrow xRz\)
    <ul>
      <li>True</li>
    </ul>
  </li>
</ul>

<h3 id="example-3">Example 3</h3>
<p>Let \(A=\{1,2,3\},R_1=\{(1,1),(2,2),(3,3),(1,3)\}\)</p>

<pre><code class="language-mermaid">graph TD
1((1)) --&gt; 3
1 --&gt; 1
2((2)) --&gt; 2
3((3)) --&gt; 3
</code></pre>

<ul>
  <li>Reflective \(\forall x:xRx\)
    <ul>
      <li>True</li>
    </ul>
  </li>
  <li>Symmetric \(\forall x,y: xRy\Rightarrow yRx\)
    <ul>
      <li>False</li>
    </ul>
  </li>
  <li>Antisymmetric \(\forall x,y:xRy,yRx\Rightarrow x=y\)
    <ul>
      <li>True</li>
    </ul>
  </li>
  <li>Transitive \(\forall x,y,z:xRy,yRz\Rightarrow xRz\)
    <ul>
      <li>True</li>
    </ul>
  </li>
</ul>

<h3 id="example-3-1">Example 3</h3>
<p>Let \(A=\{1,2,3\},R_1=\{(1,3),(3,2),(2,3)\}\)</p>

<pre><code class="language-mermaid">graph TD
1((1)) --&gt; 3
3((3)) --&gt; 2
2((2)) --&gt; 3
</code></pre>

<ul>
  <li>Reflective \(\forall x:xRx\)
    <ul>
      <li>False</li>
    </ul>
  </li>
  <li>Symmetric \(\forall x,y: xRy\Rightarrow yRx\)
    <ul>
      <li>False</li>
    </ul>
  </li>
  <li>Antisymmetric \(\forall x,y:xRy,yRx\Rightarrow x=y\)
    <ul>
      <li>False</li>
    </ul>
  </li>
  <li>Transitive \(\forall x,y,z:xRy,yRz\Rightarrow xRz\)
    <ul>
      <li>False</li>
    </ul>
  </li>
</ul>

<h3 id="example---reachability">Example - Reachability</h3>
<p>Consider some roads in a city. Some may be private and not link up, some may be one way, some may have no stopping. This is represented on the following graph:</p>

<pre><code class="language-mermaid">graph TD
1((1)) --&gt; 2((2))
2 --&gt; 6((6))
6 --&gt; 4((4))
4 --&gt; 5((5))
5 --&gt; 5
4 --&gt; 1
1 --&gt; 4
3((3)) --&gt; 3
</code></pre>

<p>Say you start at <code class="language-plaintext highlighter-rouge">1</code> and end at <code class="language-plaintext highlighter-rouge">5</code> are you able to make this path?</p>

<p>If there was a transitive relation from the source to the destination then you would be able to get there in one hop.</p>

<p>This will be continued in the next lecture.</p>

<h1 id="comp109---relations---5"><a href="/UoL/comp109/lectures/2020/11/24/2.html">COMP109 - Relations - 5</a></h1>
<h2 id="properties-of-binary-relations">Properties of Binary Relations</h2>
<p>A binary relation \(R\) on a set \(A\) is:</p>

<h3 id="reflexive">Reflexive</h3>
<p>When \(xRx\) for all \(x\in A\).</p>

<p>\[\forall x\ A(x)\Rightarrow xRx\]</p>

<p>This means that if two of the same elements are compared successfully then the relation is reflexive.</p>

<p>As example of a relation that is non-reflexive is \(&lt;\) as the left must be different to the right.</p>

<h3 id="symmetric">Symmetric</h3>
<p>When \(xRy\) implies \(yRx\) for all \(x,y\in A\):</p>

<p>\[\forall x,y\ xRy\Rightarrow yRx\]</p>

<p>This is similar to Facebook friends. If you are friends with one person they have to be your friend too.</p>

<p>An example that is non-symmetric is \(\leq\) as they are not necessarily comparable.</p>

<h3 id="antisymmetric">Antisymmetric</h3>
<p>When \(xRy\) and \(yRx\) imply \(x=y\) for all \(x,y\in A\):</p>

<p>\[\forall x,y\ xRy\text{ and } yRx\Rightarrow y = x\]</p>

<p>This means that if you can swap the elements and the relation still holds true then the elements must be equal. This is the same as the \(\leq\) relation.</p>

<p>The \(L\) relation from before doesn‚Äôt satisfy this property as two different words with the same length are not the same.</p>

<h3 id="transitive">Transitive</h3>
<p>When \(xRy\) and \(yRz\) imply \(xRz\) for all \(x,y,z\in A\):</p>

<p>\[\forall x,y,z\ xRy\text{ and }yRz\Rightarrow xRz\]</p>

<p>This is the same as the ordering example from before. Thus the relationship \(&lt;\) satisfies this property.</p>

<h2 id="examples">Examples</h2>
<p>Which of the following define a relation that is reflexive, symmetric, antisymmetric of transitive?</p>

<ol>
  <li>\(x\) divides \(y\) on the set \(\Bbb{Z^+}\) of positive integers.
    <ul>
      <li>This relations is reflexive, antisymmetric and transitive.</li>
    </ul>
  </li>
  <li>\(x\neq y\) on the set \(\Bbb{Z}\) of integers.
    <ul>
      <li>This relations is symmetric and transitive.</li>
    </ul>
  </li>
  <li>\(x\) has the same age as \(y\) on the set of people.
    <ul>
      <li>This relations is reflexive, symmetric and transitive.</li>
    </ul>
  </li>
</ol>

<h1 id="comp109---relations---4"><a href="/UoL/comp109/lectures/2020/11/24/1.html">COMP109 - Relations - 4</a></h1>
<h2 id="properties-of-relations-on-a-set">Properties of Relations on a Set</h2>
<h3 id="infix-notation-for-binary-relations">Infix Notation for Binary Relations</h3>
<p>If \(R\) is a binary relation then we write \(xRy\) whenever \((x,y)\in R\). The predicate \(xRy\) is read as \(x\) is \(R\)-related to \(y\).</p>

<p>This is similar to the notation \(a\subseteq b\) or \(a\leq b\).</p>

<h3 id="comparing-strings">Comparing Strings</h3>
<p>Consider relations \(R,S\) and \(L\) on the set of all strings:</p>

<ul>
  <li>\(R\)-lexicographic ordering.
    <ul>
      <li>This is alphabetic ordering.</li>
    </ul>
  </li>
  <li>\(uSv\) if, and only if, \(u\) is a sub-string of \(v\).
    <ul>
      <li>\(\text{an}S\text{ana},\ \text{ana}S\text{banana}\).</li>
      <li>\(uSv,\ vSw\Rightarrow uSw\).
        <ul>
          <li>This means that for any ordering such as \(u\) then \(v\) the ordering of \(u\) and \(w\) is also true provided that we know that \(v&lt;w\).</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>\(uLv\) if, and only if, \(\text{len}(u)\leq \text{len}(v)\).</li>
</ul>

<p>For any of these relations:</p>

<p>\[\forall u,v \text{ if } uRv \text{ and } vRu\Rightarrow u=v\]</p>

<p>This means if the relation works both ways then they are equal in terms of the ordering.</p>

<h1 id="comp109---relations---3"><a href="/UoL/comp109/lectures/2020/11/23/2.html">COMP109 - Relations - 3</a></h1>
<h2 id="building-new-relations-from-given-ones">Building New Relations from Given Ones</h2>
<h3 id="inverse-relation">Inverse Relation</h3>
<p>Given a realtion \(R\subseteq A \times B\). We define the inverse relation \(R^{-1}\subset B\times A\) by:</p>

<p>\[R^{-1}=\{(b,a)\vert (a,b) \in R\}\]</p>

<p>Example:</p>

<ul>
  <li>The inverse of the relation <em>is a parent of</em> on the set of people is the relation <em>is a child of</em>.</li>
</ul>

<p>In other words if you swap the elements of a given relation you should get the inverse relation.</p>

<h4 id="example">Example</h4>
<p>\(A=\{1,2,3,4\},R=\{(x,y)\vert x\leq y\}\)</p>

<p>Therefore:</p>

<p>\(R=\{(1,1),(1,2),(1,3),(1,4),(2,2),(2,3),(2,4),(3,3),(3,4),(4,4)\}\)</p>

<p>And:</p>

<p>\(R=\{(1,1),(2,1),(3,1),(4,1),(2,2),(3,2),(4,2),(3,3),(4,3),(4,4)\}\)</p>

<p>You could also say:</p>

<p>\(R^{-1}=\{(y,x)\vert x \leq y\} = \{(u,v)\vert u\geq v\}\)</p>

<p>In these examples you either swap the predicate to denote the inverse or you swap the evaluation such that it produces the inverse.</p>

<h3 id="composition-of-relations">Composition of Relations</h3>
<p>Let \(R\subseteq A\times b\) and \(s\subseteq B\times C\). The (functional) composition of \(R\) and \(S\), denoted by \(S\circ R\), is the binary relation between \(A\) and \(C\) given by:</p>

<p>\[S\circ R = \{(a,c)\vert \text{ exists } b\in B \text{ such that } aRb \text{ and } bSc\}\]</p>

<p class="info">The notation \(aRb\) is another way of writing \((a,b)\in R\).</p>

<pre><code class="language-mermaid">graph LR
subgraph A
a[1]
end
subgraph B
b[ ]
end
subgraph C
c[2]
end 
a --&gt;|R subset A * B| b
b --&gt;|S subset B * C| c
</code></pre>

<p>Example:</p>

<ul>
  <li>If \(R\) is the relation <em>is a sister of</em> and \(S\) is the relation <em>is a parent of</em> then:
    <ul>
      <li>\(S\circ R\) is the relation <em>is an aunt of</em>.</li>
      <li>\(S\circ S\) is the relation <em>is a grandparent of</em>.</li>
    </ul>
  </li>
</ul>

<h4 id="example-1">Example</h4>

<ul>
  <li>\(R:\) is a sister of</li>
  <li>\(S:\) is a parent of</li>
  <li>\(S\circ R=\{(a,c)\vert\text{ exists } b\in B\text{ such that } aRb \text{ and } bSc\}\)</li>
</ul>

<pre><code class="language-mermaid">graph TD
fm[Fred and Mavis] --- Alice
fm --- ks[Ken and Sue]
ks --- Jane
ks --- Fiona
ks --- Alan
jm[John and Mary] --- ks
jm --- Mike
jm --- Penny
</code></pre>

<ul>
  <li>Alice \(R\) Ken and Ken \(S\) Alan so Alice \(S\circ R\) Alan.
    <ul>
      <li>This can also be written as \((\text{Alice, Alan})\in S\circ R\)</li>
    </ul>
  </li>
</ul>

<h4 id="diagraph-representation-of-compositions">Diagraph Representation of Compositions</h4>

<p>For this diagram \(A=\{a,b\},B=\{1,2,3\},C=\{x,y\}\):</p>

<pre><code class="language-mermaid">graph LR
subgraph R
a --&gt; 1
a --&gt; 2
b --&gt; 2
a --&gt; 3
end
subgraph S
12[1] --&gt; y
22[2] --&gt; x
32[3] --&gt; x
end 
subgraph S circ R
a2[a] --&gt; x2[x]
a2 --&gt; y2[y]
b2[b] --&gt; x2
end
1 --&gt; 12
2 --&gt; 22
3 --&gt; 32
</code></pre>

<h2 id="computer-friendly-representation-of-binary-relations---matrices">Computer Friendly Representation of Binary Relations - Matrices</h2>

<p>Let \(A=\{a_1,\ldots,a_n\},B=\{b_1,\ldots,b_m\}\) and \(R\subseteq A\times B\).</p>

<p>We represent \(R\) by an array \(M\) of \(n\) rows and \(m\) columns. Such an array is called an \(n\) by \(m\) matrix.</p>

<p>The entry in row \(i\) and column \(j\) of this matrix is given by \(M(i,j)\) where:</p>

<p>\[
M(i,j)=\begin{cases}
1 &amp; \text{ if } (a_i,b_j)\in R\\
0 &amp; \text{ if } (a_1,b_j)\notin R
\end{cases}
\]</p>

<h3 id="example-1">Example 1</h3>
<p>Let \(A=\{1,3,5,7\}, B=\{2,4,6\}\) and:</p>

<p>\[U=\{(x,y)\in A\times B\vert x + y = 9\}\]</p>

<p>Assume an enumeration \(a_1=1,a_2=3,a_3=5,a_4=7\) and \(b_1=2,b_2=4,b_3=6\). Then \(M\) represents \(U\), where:</p>

<p>\[
M = \begin{bmatrix}
0 &amp; 0 &amp; 0\\
0 &amp; 0 &amp; 1\\
0 &amp; 1 &amp; 0\\
1 &amp; 0 &amp; 0
\end{bmatrix}
\]</p>

<p class="info">When representing in a matrix the rows are the items in set \(A\) going down and the columns are the items in set \(B\) going across.</p>

<p>You can then read the answers from the matrix as: \(U=\{(7,2),(5,4),(4,6)\}\).</p>

<h3 id="example-2">Example 2</h3>
<p>The binary relation \(R\) on \(A=\{1,2,3,4\}\) has the following digraph representation:</p>

<pre><code class="language-mermaid">graph LR
4 --&gt; 3
3 --&gt; 2
2 --&gt; 1
</code></pre>

<ol>
  <li>
    <p>What are the ordered pairs?</p>

    <p>\(R=\{(4,3),(3,2),(2,1)\}\)</p>
  </li>
  <li>
    <p>Draw the matrix.</p>

    <p>\[
 \begin{bmatrix}
 0&amp;0&amp;0&amp;0\\
 1&amp;0&amp;0&amp;0\\
 0&amp;1&amp;0&amp;0\\
 0&amp;0&amp;1&amp;0
 \end{bmatrix}
 \]</p>
  </li>
  <li>
    <p>Explain the relation.</p>

    <p>\(x\) is 1 larger than \(y\).</p>
  </li>
</ol>

<h3 id="matrices-and-composition">Matrices and Composition</h3>
<p>This is working on the same relation as was seen in the section <a href="#diagraph-representation-of-compositions">Diagraph Representation of Compositions</a>.</p>

<pre><code class="language-mermaid">graph LR
subgraph X
a
b
end
subgraph Y
1
2
3
end
subgraph Z
x
y
end
a --&gt; 1
a --&gt; 2
a --&gt; 3
b --&gt; 2
1 --&gt; y
2 --&gt; x
3 --&gt; x
</code></pre>

<p>This result in the following for the composition of \(S\circ R\):</p>

<pre><code class="language-mermaid">graph LR
a --&gt; x
a --&gt; y
b --&gt; x
</code></pre>

<p>From these graphs we can deduce that \(R\subseteq X\times Y, S\subseteq Y\times Z\).</p>

<p>Given the matrices of \(R\) and \(S\):</p>

<p>\[
R: \begin{bmatrix}
1&amp;1&amp;1\\
0&amp;1&amp;0
\end{bmatrix}
S: \begin{bmatrix}
0&amp;1\\
1&amp;0\\
1&amp;0
\end{bmatrix}
\]</p>

<p>Calculate the binary relation matrix of \(S\circ R\):</p>

<p>If you transpose the row \(a\) in the matrix \(R\) on the column \(x\) in the matrix \(S\) you can compare to see of \(a\) is a subset of \(y\). If it is then you put a 1 in the resultant matrix and if not you put a zero:</p>

<p>\[
S\circ R:\begin{bmatrix}
1&amp;1\\
1&amp;0
\end{bmatrix}
\]</p>

<h4 id="boolean-matrix-product">Boolean Matrix Product</h4>
<p>Given two matrices with entries 1 and 0 representing the relations we can form the matrix representing the composition. This is called the logical (Boolean) matrix product.</p>

<p>Let \(A=\{a_1,\ldots,a_n\},B=\{b_1,\ldots,b_m\}\) and \(C=\{c_1,\ldots,c_p\}\).</p>

<p>The logical matrix \(M\) representing \(R\) is given by:</p>

<p>\[
M(i,j)=\begin{cases}
1 &amp; \text{ if } (a_i,b_j)\in R\\
0 &amp; \text{ if } (a_1,b_j)\notin R
\end{cases}
\]</p>

<p>The logical matrix \(N\) representing \(S\) is given by:</p>

<p>\[
N(i,j)=\begin{cases}
1 &amp; \text{ if } (b_i,c_j)\in S\\
0 &amp; \text{ if } (b_1,c_j)\notin S
\end{cases}
\]</p>

<p>Then the entries \(P(i,)\) of the logical matrix \(P\) representing \(S\circ R\) are given by:</p>

<ul>
  <li>\(P(i,j)=1\) if there existsw \(l\) with \(1\leq l\leq m\) such that \(M(i,l)=1\) and \(N(i,j)=1\).</li>
  <li>\(P(i,j)=0\), otherwise.</li>
</ul>

<p>This is the same as a product of matrices, \(P=MN\). Instead of addition and multiplication we use logical OR and AND.</p>

<h1 id="comp109---relations---2"><a href="/UoL/comp109/lectures/2020/11/23/1.html">COMP109 - Relations - 2</a></h1>
<h2 id="digraph-representation-of-relations">Digraph Representation of Relations</h2>

<p>Recall that a function \(f\) from a set \(A\) to a set \(B\) assigns exactly one element of \(B\) to each element of \(A\).</p>

<ul>
  <li>Gives rise to the relation \(R_f=\{(a,b)\in A\times B \vert b =f(a)\}\)</li>
</ul>

<p>If a relation \(S\subseteq A\times B\) is such that for every \(a\in A\) there exists at most one \(b\in B\) with \((a,b)\in S\), relation \(S\) is <strong>functional</strong>.</p>

<p>Sometimes in the literature, functions are introduces through functional relations.</p>

<h3 id="example">Example</h3>
<p>\(A\{i\in \Bbb{N}\vert i&lt;10\},B=\{i\in\Bbb{N}\vert 5&lt;i&lt;15\},R=\{((x,y)\in A\times B\vert y =2x)\}\)</p>

<pre><code class="language-mermaid">graph TD
subgraph A
0
1
2
3
4
5
6
7
8
9
end
subgraph B
62[6]
72[7]
82[8]
92[9]
10
11
12
13
14
end
3 --&gt; 62
4 --&gt; 82
5 --&gt; 10
6 --&gt; 12
7 --&gt; 14

</code></pre>

<p class="info">As this is a relation there are allowed to be values in the set \(A\) which don‚Äôt have a mapping to a value in the set \(B\). If this was a function and not a relation that wouldn‚Äôt be allowed.</p>

<p class="info">This is a functional relation as each item in  \(A\) only has <strong>one</strong> mapping to \(B\).</p>

<h1 id="comp109---relations---1"><a href="/UoL/comp109/lectures/2020/11/22/1.html">COMP109 - Relations - 1</a></h1>
<h2 id="cartesian-product">Cartesian Product</h2>
<p>For the Cartesian product you are making a list of all possibilities of the elements in both sets. This is similar to multiplying brackets.</p>

<h3 id="example">Example</h3>
<p>Let \(A=\{1,2\}\) and \(B=\{a,b,c\}\), then:</p>

<p>\[A\times B = \{(1,a),(2,a),(1,b),(2,b),(1,c),(2,c)\}\]</p>

<p>Therefore:</p>

<p>\[B\times A = \{(a,1),(a,2),(b,1),(b,2),(c,1),(c,2)\}\]</p>

<h3 id="relations">Relations</h3>
<p>Any relation between the elements in set \(A\) and \(B\) will be in the set of their Cartesian product.</p>

<p>A <strong>binary relation</strong> between two sets \(A\) and \(B\) is a subset \(R\) of the Cartesian product \(A\times B\).</p>

<p>If \(A=B\), then \(R\) is called <strong>a binary relation on \(A\)</strong>.</p>

<h3 id="family-tree-example">Family Tree Example</h3>
<p>The set \(A\) is the set of all people in the tree.</p>

<pre><code class="language-mermaid">graph TD
fm[Fred and Mavis] --- Alice
fm --- ks[Ken and Sue]
ks --- Jane
ks --- Fiona
ks --- Alan
jm[John and Mary] --- ks
jm --- Mike
jm --- Penny
</code></pre>

<ol>
  <li>
    <p>\(R=\{(x,y)\vert x\text{ is a grandfather of } y\}\)</p>

    <p>For this set:</p>

    <p>\(R=\{\text{(Fred, Jane), (Fred, Fiona), (Fred, Alan), (John, Jayne), (John, Fiona), (John, Alan)}\}\)</p>
  </li>
  <li>
    <p>\(S=\{(x,y)\vert x\text{ is a sister of } y\}\)</p>

    <p>For this set:</p>

    <p>\(S=\{\text{(Alice, Ken), (Sue, Mike), (Sue, Penny), (Penny, Sue), (Penny, Mike), (Jane, Fiona)}\}\)</p>
  </li>
</ol>

<h3 id="algebraic-example">Algebraic Example</h3>
<p>Write down the ordered parts belonging to the following binary relations between \(A=\{1,3,5,7\}\) and \(B=\{2,4,6\}:\)</p>

<ol>
  <li>
    <p>\(U=\{(x,y)\in A\times B \vert x + y = 9\}\)</p>

    <p>This means the combinations from the two sets where the elements sum to 9.</p>

    <p>\(U=\{(3,6),(5,4),(7,2)\}\)</p>
  </li>
  <li>
    <p>\(V=\{(x,y)\in A\times B \vert x &lt; y \}\)</p>

    <p>This is the set of all pairs such that the first element is smaller than the second element.</p>

    <p>\(V=\{(1,2),(1,4),(1,6),(3,4),(3,6),(5,6)\}\)</p>
  </li>
</ol>

<h1 id="comp109---functions---8"><a href="/UoL/comp109/lectures/2020/11/17/3.html">COMP109 - Functions - 8</a></h1>
<h2 id="uncountable-sets">Uncountable Sets</h2>
<p>A set that is not countable is called uncountable. The following set is uncountable:</p>

<p>\[S = \{ x \in \mathbb{R} \vert 0 &lt; x &lt; 1 \}\]</p>

<p>There is no bijective function from this set to the set of all natural numbers.</p>

<h3 id="cantors-diagonal-argument">Cantor‚Äôs Diagonal Argument</h3>
<p>Suppose for a proof by contradiction that there exists a bijection \(f:\mathbb{N^+}\rightarrow S\). Consider decimal representation of \(f(n)\), for \(n\in\mathbb{N^+}\):</p>

<p><em>In this example we are proving for all decimals between 0 and 1. We are considering that there is a mapping that makes them countable.</em></p>

<ul>
  <li>\(f(1)=0.a_{11}a_{12}a_{13}\ldots a_{1n}\ldots\)</li>
  <li>\(f(2)=0.a_{21}a_{22}a_{23}\ldots a_{2n}\ldots\)</li>
  <li>\(f(3)=0.a_{31}a_{32}a_{33}\ldots a_{3n}\ldots\)</li>
  <li>\(\vdots\)</li>
  <li>\(f(n)=0.a_{n1}a_{n2}a_{n3}\ldots a_{nn}\ldots\)</li>
  <li>\(\vdots\)</li>
</ul>

<p class="info">In this proof we treat this as a table without the leading zero and consider the main diagonal where the digit  \(a_{ij}\) has equal \(i\) and \(j\).</p>

<p>We show that there exists \(d\in S\) such that for no \(i\in\mathbb{N^+}\) we have \(f(i)=d\).</p>

<p>Let \(d=0.d_{1}d_{2}d_{3}\ldots d_{n}\ldots\) where \(d_i=\begin{cases}2, &amp; \text{if } a_{ii}=1\\ 1, &amp; \text{if } a_{ii}\neq 1\end{cases}\)</p>

<p>Then for every \(i\in\mathbb{N^+}\) \(d\) is different at position \(i\) from \(f(i)\). So, for no \(i\in\mathbb{N^+}\) we have \(f(i)=d\), fo \(f\) is not surjective. A contradiction.</p>

<h1 id="comp109---functions---7"><a href="/UoL/comp109/lectures/2020/11/17/2.html">COMP109 - Functions - 7</a></h1>
<h2 id="countable-sets">Countable Sets</h2>
<p>A set that is either finite or has the same cardinality as \(\mathbb{N}\) is called countable.</p>

<h3 id="mathbbz">\(\mathbb{Z}\)</h3>
<p>For a set \(\mathbb{Z}\) you can count it by starting at zero and then jumping from item to item by the way of a function. In this way you can produce the following mapping: \(\mathbb{Z}\rightarrow\mathbb{N}\).</p>

<h3 id="mathbbq">\(\mathbb{Q}\)</h3>
<p>Consider an infinite table like so:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">\(\frac{1}{1}\)</th>
      <th style="text-align: center">\(\frac{1}{2}\)</th>
      <th style="text-align: center">\(\frac{1}{3}\)</th>
      <th style="text-align: center">\(\ldots\)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">\(\frac{2}{1}\)</td>
      <td style="text-align: center">\(\frac{2}{2}\)</td>
      <td style="text-align: center">\(\frac{2}{3}\)</td>
      <td style="text-align: center">\(\ldots\)</td>
    </tr>
    <tr>
      <td style="text-align: center">\(\frac{3}{1}\)</td>
      <td style="text-align: center">\(\frac{3}{2}\)</td>
      <td style="text-align: center">\(\frac{3}{3}\)</td>
      <td style="text-align: center">\(\ldots\)</td>
    </tr>
    <tr>
      <td style="text-align: center">\(\ldots\)</td>
      <td style="text-align: center">\(\ldots\)</td>
      <td style="text-align: center">\(\ldots\)</td>
      <td style="text-align: center">\(\ddots\)</td>
    </tr>
  </tbody>
</table>

<p>In this table each number is represented infinitely many times due to equivalencies.</p>

<p>Start counting in the top left corner. Then count from the first diagonal from top to bottom. For equivalent elements there is no need to count them as the set only includes the most simplified fraction.</p>

<p>From this you can conclude that the cardinality of the set of rational numbers is a bijection of the set of natural numbers. This means that it is countable.</p>

<h1 id="comp109---functions---6"><a href="/UoL/comp109/lectures/2020/11/17/1.html">COMP109 - Functions - 6</a></h1>
<h2 id="bijections-and-cardinality">Bijections and Cardinality</h2>
<p>The cardinality of a finite set is the number of element in the set. Sets \(A\) and \(B\) have the same cardinality \(\Rightarrow\) there is a bijection from \(A\) to \(B\).</p>

<p>Let \(S=\{1,2,\ldots,n\}\) and let \(B^n\) be the set of bit strings of length \(n\). The function:</p>

<p>\[f:\text{Pow}(S)\rightarrow B^n\]</p>

<p>assigns each subset \(A\) of \(S\) to its characteristic vector is a bijection.</p>

<p>We used this to compute the cardinality of the powerset.</p>

<h3 id="infinite-sets">Infinite Sets</h3>
<p>Sets \(A\) and \(B\) have the <strong>same cardinality</strong> iff there is a <strong>bijection</strong> from \(A\) to \(B\).</p>

<h4 id="mathbbz-and-even-integers">\(\mathbb{Z}\) and even integers.</h4>

<p>\(S=\{n\in\mathbb{Z}\vert n\text{ is even}\}\)</p>

<p>\(f:\mathbb{Z}\rightarrow S\)</p>

<p>\(f(n)=2n\)</p>

<p>\(f\) is a bijection</p>

<p>This is by the definition of bijection as the function maps one to one.</p>

<h4 id="hilberts-infinite-hotel">Hilberts Infinite Hotel</h4>

<p>\(\mathbb{N}\) and \(\mathbb{Z}\)</p>

<p>Consider a hotel with rooms and a train with people having the cardinality \(\in \mathbb{N^+}\). Each person in the train is given a unique room.</p>

<p>A second train arrives with the same properties. Consider that people in train one are given odd rooms and people in train two are given even rooms.</p>

<p>The relation between the cardinality of the hotel and the two trains:</p>

<p>\(f:\mathbb{Z}\rightarrow\mathbb{N}\)</p>

<p>\[f(n) = \begin{cases}2n,&amp; \text{if } n\geq 0\\ -2n-1,&amp; \text{if }n&lt;0\end{cases}\]</p>

<p>This proves that there is a bijection between the two sets \(\mathbb{Z}\) (the integers) and \(\mathbb{N}\) (natural numbers).</p>

<h4 id="real-numbers-xinmathbbrvert-ox1-and-mathbbr">Real numbers \(\{x\in\mathbb{R}\vert o&lt;x&lt;1\}\) and \(\mathbb{R^+}\)</h4>

<pre><code class="language-charter">x-axis:
	label: x
	range: -10 10
y-axis:
	label: g(x)=1/x-1
	range: -3 3
plot:
	x: range: -10 10 200
	y: math: x^(-1)-1
plot:
	x: 0
	y: -3 3
	color: black
plot:
	x: -11 11
	y: 0 0
	color: black
plot:
	x: 1 1
	y: -3 3
	color: blue
</code></pre>

<p>This graph shows that there is a one to one mapping of the numbers between 0 and 1 to all real numbers. This is becuse for all values for x between 0 and one all real numbers are produced on the y axis.</p>

<h1 id="comp109---catch-up-session-6"><a href="/UoL/comp109/catch-up%20sessions/2020/11/16/1.html">COMP109 - Catch-up Session 6</a></h1>
<h2 id="power-sets">Power Sets</h2>
<p>The power set \(\text{Pow}\{A\}\) of a set \(A\) is the set of all possible subsets. This includes the null set \(\emptyset\) and the full set.</p>

<p>Each set in the power set follows this definition:</p>

<p>\[\{x\vert x\subseteq A\}\]</p>

<h3 id="example">Example</h3>
<p>The power set \(\text{Pow}\{A\}\) of a set \(A=\{1,2\}\) is:</p>

<p>\[\{\emptyset,\{1\},\{2\},\{1,2\}\}\]</p>

<p>For any set \(A\):</p>

<p>\[\vert \text{Pow(A)}\vert =2^{\vert A\vert }\]</p>

<p>Therefore:</p>

<p>\[\{x\vert x\in\text{Pow}(A)\}=\{\emptyset,\ldots\}\]</p>

<h2 id="russells-paradox">Russell‚Äôs Paradox</h2>
<p>People say that you can define a set just by defining the constraints of the set:</p>

<p>\[\{x\in\mathbb{R}\vert x&lt;4,x\geq-1\}\]</p>

<p>However statements written in this way are susceptible to paradoxes. For example the following paradox:</p>

<p>Everyone from Crete is a liar. <cite>(Said by a person from Crete)</cite></p>

<h3 id="paradoxes-in-general">Paradoxes in General</h3>
<p>A paradox is a case that when expanded contains a contradiction.</p>

<h2 id="avoiding-paradoxes">Avoiding Paradoxes</h2>
<p>To avoid paradoxes we should write the set definition in the following way:</p>

<p>\[\{x\in\ldots\vert \ldots\}\]</p>

<p>This means that the set or value x should be taken from some other set.</p>

<p>They should not be written like this:</p>

<p>\[\{x\ldots\vert \ldots\}\]</p>

<h2 id="venn-diagrams-and-set-logic">Venn Diagrams and Set Logic</h2>

<p>Draw the following as a Venn diagram: \(A\cap (B\cup C)\)</p>

<p><img src="/UoL/assets/COMP109/Catch-up Sessions/2020-11-16-1-1.png" alt="" /></p>

<p>Draw the following as a Venn diagram: \((A\cap B)\cup(A\cap C)\)</p>

<p><img src="/UoL/assets/COMP109/Catch-up Sessions/2020-11-16-1-2.png" alt="" /></p>

<h1 id="comp109---functions---5"><a href="/UoL/comp109/lectures/2020/11/13/3.html">COMP109 - Functions - 5</a></h1>
<h2 id="theorem-of-friends-and-strangers">Theorem of Friends and Strangers</h2>
<p>Show that in any group of six people there are either three who all know each other or three complete strangers.</p>

<p><img src="/UoL/assets/COMP109/Lectures/2020-11-13-3-1.png" alt="Graph 1" /></p>

<p>On this graph blue is people who know each other and red is people who don‚Äôt. From the graph you can see that only two people will know each other.</p>

<p><img src="/UoL/assets/COMP109/Lectures/2020-11-13-3-2.png" alt="Graph 2" /></p>

<p>What the question is saying is that no matter how you colour this you will always have a triangle of three people with red lines (don‚Äôt know) or blue lines (do know).</p>

<h3 id="proof">Proof</h3>
<p>Let \(A,B,C,D,E,\underline F\) denote people under consideration.</p>

<p>Construct \(f:\{A,B,C,D,E\}\rightarrow\{0,1\}\) as follows: \(f(x)=1\) if \(x\) knows \(F\), or \(0\) else.</p>

<p>This means that we are taking out the person \(F\) and considering who they know in a binary format.</p>

<pre><code class="language-mermaid">graph TD
subgraph A
A
B
C
D
E
end
subgraph B
0
1
end
</code></pre>

<p>\(\vert A\vert =5, \vert B\vert =2\) Therefore there must exist \(\{x_1,x_2,x_3\}\subseteq\{A,B,C,D,E\}\) such that \(f(x_1)=f(x_2)=f(x_3)\)</p>

<h4 id="case-1">Case 1</h4>
<p>Suppose that \(f(x_1)=f(x_2)=f(x_3)=1\). This means that they all know each other.</p>

<pre><code class="language-mermaid">graph LR
x1 --&gt; F
x2 --&gt; F
x3 --&gt; F
x2 --&gt;|Case 1.1| x3
x1 .-&gt;|Case 1.2| x2
x2 .-&gt;|Case 1.2| x3
x3 .-&gt;|Case 1.2| x1
</code></pre>
<p><em>Dotted means don‚Äôt know.</em></p>

<h5 id="case-11">Case 1.1</h5>
<p>There is a pair who know each other.</p>

<h4 id="case-12">Case 1.2</h4>
<p>There is no pair who know each other.</p>

<p>So \(x_1,x_2,x_3\) are complete strangers.</p>

<h3 id="case-2">Case 2</h3>
<p>\(f(x_1)=f(x_2)=f(x_3)=0\)</p>

<pre><code class="language-mermaid">graph LR
x1 .-&gt; F
x2 .-&gt; F
x3 .-&gt; F
x1 --&gt;|Case 2.1| x2
x2 --&gt;|Case 2.1| x3
x3 --&gt;|Case 2.1| x1
x1 .-&gt;|Case 2.2| x2
</code></pre>
<p><em>Dotted means don‚Äôt know.</em></p>

<h4 id="case-21">Case 2.1</h4>
<p>\(x_1,x_2,x_3\) all know each other.</p>

<h4 id="case-22">Case 2.2</h4>
<p>Three is a pair who don‚Äôt know each other.</p>

<p>As you can see in any case there is a triangle of three people with links stating that they know or don‚Äôt know each other in any case. This proves the statement. This is as we can see that three know or don‚Äôt know each other in any situation.</p>

<h1 id="comp109---functions---4"><a href="/UoL/comp109/lectures/2020/11/13/2.html">COMP109 - Functions - 4</a></h1>
<h2 id="extended-pigeonhole-principle">Extended Pigeonhole Principle</h2>
<p>Consider a function \(f:A\rightarrow B\) where \(A\) and \(B\) are finite sets and \(\vert A\vert &gt;k\vert B\vert\) for some natural number \(k\). Then, there is a value of \(f\) which occurs at least \(k+1\) times.</p>

<pre><code class="language-mermaid">graph TD
subgraph A
a
b
c
d
e
f
g
end 
subgraph B
1
2
3
end
a --&gt; 1
b --&gt; 2
c --&gt; 3
d --&gt; 1
e --&gt; 2
f --&gt; 3
g --&gt; 1
</code></pre>

<p>In this graph \(k=2\). Additionally you can see that the value 1 occurs \(k+1=3\) times as \(a,d\) and \(g\) all map to it.</p>

<h3 id="example">Example</h3>
<p>How many different surnames must appear in a telephone directory to guarantee that at least five of the surnames begin with the same letter of the alphabet and end with the same letter of the alphabet?</p>

<pre><code class="language-mermaid">graph LR
subgraph A
Names
end
subgraph B
a,a
...
end
Names --&gt; a,a
Names --&gt; ...
</code></pre>

<p>\(\vert B\vert =26^2\)</p>

<p>Therefore:</p>

<p>Due to the principles covered above, \(\vert A\vert &gt;4\vert B\vert \)</p>

<p>Thus:</p>

<p>\(\vert A\vert =4\times26\times26+1=2705\)</p>

<h1 id="comp109---functions---3"><a href="/UoL/comp109/lectures/2020/11/13/1.html">COMP109 - Functions - 3</a></h1>
<h2 id="cardinality-of-finite-sets-and-functions">Cardinality of Finite Sets and Functions</h2>
<p>The cardinality of a finite set \(S\) is the number of elements in \(S\).</p>

<p>A bijection \(f:S\rightarrow\{1,\ldots,n\}\). This means that there are as many elements in the set that \(S\) maps to as there are in \(S\).</p>

<p>For finite sets \(A\) and \(B\):</p>

<ul>
  <li>\(\vert A\vert \geq\vert B\vert \Rightarrow\) there is a surjective function from \(A\) to \(B\).</li>
  <li>\(\vert A\vert \leq\vert B\vert \Rightarrow\) there is an injective function from \(A\) to \(B\).</li>
  <li>\(\vert A\vert =\vert B\vert \Rightarrow\) there is a bijection function from \(A\) to \(B\).</li>
</ul>

<pre><code class="language-mermaid">graph TD
subgraph A
a[ ]
b[ ]
c[ ]
end
subgraph n
1
2
n
end
subgraph B
d[ ]
e[ ]
f[ ]
end
a --&gt; 1
b --&gt; 2
c --&gt; n
d --&gt; 1
e --&gt; 2
f --&gt; n
</code></pre>

<p>From the graph as \(\vert A\vert =n=\vert B\vert\) then we can deduce that \(g^{-1}\circ f\).</p>

<ul>
  <li>Bijective means one to one.</li>
  <li>Surjective means many to one.</li>
  <li>Injective means one to many.</li>
</ul>

<h2 id="the-pigeonhole-principle">The Pigeonhole Principle</h2>
<p>Let \(f:A\rightarrow B\) be a function where \(A\) and \(B\) are finite sets.</p>

<p>The pigeonhole principle states that if \(\vert A\vert &gt;\vert B\vert\) then at least one value of \(f\) occurs more than once.</p>

<p>In other words, we have \(f(a)=f(b)\) for some distinct elements \(a,b\) of \(A\).</p>

<p>The principle is if \((N+1)\) pigeons occupy \(N\) holes, then some hole must have at least 2 pigeons.</p>

<h3 id="example-1">Example 1</h3>
<p>There are 15 people on a bus. Show that at least two of them have a birthday in the same month of the year.</p>

<h4 id="proof">Proof</h4>
<p>Let \(A\) be the set of all people on the bus. \(\vert A\vert =15\)</p>

<p>Let \(B\) be the set of months. \(\vert B\vert =12\)</p>

<p>\(f\) associates the month in which a person has been born with that person.</p>

<p>By the pigeonhole principle (PHP), at least two of them have a birthday on the same day.</p>

<h3 id="example-2">Example 2</h3>
<p>How many different surnames must appear in a telephone directory to guarantee that at least two of the surnames begin with the same letter of the alphabet and end with the same letter of the alphabet?</p>

<p>If we are solving this by the pigeonhole principle then the set \(A\) of names must have same cardinality as \(\vert B\vert +1\) where \(B\) is the set of all pairs of letters.</p>

<p>\(\vert B\vert =26^2\)</p>

<p>Therefore</p>

<p>\(\vert B\vert +1=26^2+1\)</p>

<h3 id="example-3">Example 3</h3>
<p>Five number are selected from the numbers \(1,2,3,4,5,6,7\) and \(8\). Show that there will always be two of the numbers that sum to \(9\).</p>

<h4 id="proof-1">Proof</h4>
<pre><code class="language-mermaid">graph LR
subgraph B
1[1,8]
2[2,7]
3[3,6]
4[4,5]
end
subgraph A
x1
x2
x3
x4
x5
end
x1 --&gt; 1
x2 --&gt; 2
x3 --&gt; 3
x4 --&gt; 4
x5 --&gt; 1
</code></pre>
<p>\(\vert A\vert =5\) and \(\vert B\vert =4\). If each element with \(x_n\) maps to the pair which contains its digit then there must be a pair with more than one mapping. This is to say that the two sets maps via a <em>surjective</em> function.</p>

<p>This proves that there will always be one pair in the list that sums to 9.</p>

<h1 id="comp109---functions---2"><a href="/UoL/comp109/lectures/2020/11/11/4.html">COMP109 - Functions - 2</a></h1>
<h2 id="injective-one-to-one-functions">Injective (one-to-one) Functions</h2>
<p>Let \(f:A\rightarrow B\) be a function. We call \(f\) and injective, or one-to-one, function if:</p>

<p>\[f(a_1)=f(a_2)\Rightarrow a_1 = a_2 \text{ for all } a_1,a_2\in A\]</p>

<p>This is logically equivalent to \(a_1\neq a_2 \Rightarrow f(a_1) \neq f(a_2)\) and so injective functions never repeat values. In other words:</p>

<p class="info">Different inputs give different outputs.</p>

<h3 id="example-1">Example 1</h3>
<p>\(f:\mathbb{Z}\rightarrow \mathbb{Z}\) given by \(f(x)=x^2\) is not injective.</p>

<p>\(h:\mathbb{Z}\rightarrow \mathbb{Z}\) given by \(h(x)=2x\) is injective.</p>

<h3 id="example-2">Example 2</h3>
<p>To prove that a function is not injective you can give an individual example of a double mapping.</p>

<p>Take the following question foe the opposite:</p>

<p>\(h:\mathbb{Z}\rightarrow \mathbb{Z}\) given by \(h(x)=2x\) is injective.</p>

<h4 id="proof">Proof</h4>
<p>Suppose for a proof by contradiction that there exist \(a_1,a_2\) such that \(h(a_1=h(a_2)\) and \(a_1\neq a_2\).</p>

<p>\(2\times a_1 = 2a_2 \Rightarrow a_1 = a_2\), a contradiction.</p>

<h2 id="surjective-or-onto-functions">Surjective (or onto) Functions</h2>
<p>\(f:A\rightarrow B\) is surjective, or onto, if the range of \(f\) coincides with the co-domain \(f\). This means that for every \(b\in B\) there exists an \(a\in A\) with \(b=f(a)\).</p>

<h3 id="examples">Examples</h3>
<p>\(h:\mathbb{Z}\rightarrow \mathbb{Z}\) given by \(h(x)=2x\) is not surjective.</p>

<p>This is because you get every even values out as an answer.</p>

<p>\(h‚Äô:\mathbb{Q}\rightarrow \mathbb{Q}\) given by \(h‚Äô(x)=2x\) is surjective.</p>

<p>This is as you can use rational numbers to make any other number when doubled.</p>

<h2 id="question">Question</h2>
<p>Classify \(f:\{a,b,c\}\rightarrow\{1,2,3\}\) given by:</p>

<pre><code class="language-mermaid">graph LR
subgraph x
a
b
c
end
subgraph fx
1
2
3
end
a --&gt; 1
b --&gt; 1
c --&gt; 3
2
</code></pre>

<ul>
  <li>It is a function.</li>
  <li>Not injective, \(f(a)=f(b)=1\)</li>
  <li>Not subjective as no \(x\) maps with \(f(x)=2\).</li>
</ul>

<h2 id="bijections">Bijections</h2>
<p>We call \(f\) bijective if \(f\) is both injective and surjective.</p>

<h3 id="examples-1">Examples</h3>
<p>\(f:\mathbb{Q}\rightarrow \mathbb{Q}\) given by \(f(x)=2x\) is bijective.</p>

<h2 id="inverse-functions">Inverse Functions</h2>
<p>If \(f\) is a bijection from a set \(X\) to a set \(Y\), then there is a function \(f^{-1}\) from \(Y\) to \(X\) that undoes the action of \(f\); that is, it sends each element of \(Y\) back to the element of \(X\) that it came from. This function is called the inverse function for \(f\).</p>

<p>Then \(f(a)=b\) if, and only if, \(f^{-1}(b)=a\)</p>

<h3 id="example">Example</h3>
<p>\(k:\mathbb{R}\rightarrow \mathbb{R}\) given by \(k(x)=4x+3\) is invertible and \(k^{-1}(y)=\frac{1}{4}(y-3)\).</p>

<p>\(y=4x+3\). So \(4x+3=y\), \(4x=y-3\), \(x = \frac{y-3}{4}\)</p>

<p>This proves the statement by giving the same value.</p>

<h1 id="comp109---functions---1"><a href="/UoL/comp109/lectures/2020/11/11/3.html">COMP109 - Functions - 1</a></h1>
<h2 id="basics-and-definitions">Basics and Definitions</h2>
<p>A function is a method that takes an input value and gives an output value:</p>

<pre><code class="language-mermaid">graph LR
x --&gt;|Input| F[Function Machine]
F --&gt;|Output| fx
</code></pre>

<p>A function from a set \(A\) to a set \(B\) is an assignment of exactly one element of \(B\) to each element of \(A\).</p>

<p>We write \(f(a)=b\) if \(b\) is the unique element of \(B\) assigned by the function \(f\) to the element of \(a\).</p>

<p>If \(f\) is a function from \(A\) to \(B\) we write \(f: A\rightarrow B\).</p>

<pre><code class="language-mermaid">graph LR
subgraph x
1
2
3
end 
subgraph fx
4
5
6
end
1 --&gt; 4
2 --&gt; 5
3 --&gt; 4
6
</code></pre>
<p><em>A function \(f:\{1,2,3\} \rightarrow \{4,5,6\}\).</em></p>

<p>For every value on the left there should be a <strong>single</strong> value associated to it on the right.</p>

<h2 id="domain-co-domain--range">Domain, Co-domain &amp; Range</h2>
<p>Suppose \(f:A\rightarrow B\)</p>

<ul>
  <li>\(A\) is called the domain of \(f\).</li>
  <li>\(B\) is called the co-domain fo \(f\).</li>
  <li>The range \(f(A)\) of \(f\) is \(f(A)=\{f(x)\vert x\in A\}\).</li>
</ul>

<h3 id="co-domain-vs-range">Co-domain v.s. Range</h3>
<p>The difference between co-domain and range is that the co-domain is all values in the set \(B\) and the range is all the values, \(f(x)\), that \(A\) maps to via the function \(f\).</p>

<pre><code class="language-mermaid">graph LR
subgraph B
fA
end
A --&gt;|f| fA
</code></pre>
<p><em>The range of \(f\).</em></p>

<h4 id="example">Example</h4>
<p>Give the range of the function:</p>

<p>\[\sin(x):\mathbb{R}\rightarrow\mathbb{R}\]</p>

<p>The range of the function would be:</p>

<p>\[\sin(x)=\{x\in\mathbb{R}\vert -1\leq x\leq 1\}\]</p>

<h2 id="composition-of-functions">Composition of Functions</h2>
<p>If \(f:X\rightarrow Y\) and \(g:Y\rightarrow Z\) are functions, then their composition \(g\circ f\) is a function from \(X\) to \(Z\) given by:</p>

<p>\[(g\circ f)(x)=g(f(x))\]</p>

<p>```mermaid
graph LR
subgraph X
x
end
subgraph Y
subgraph Y‚Äô
fx
end
end
subgraph Z
gfx
end</p>

<p>x ‚Äì&gt; fx
fx ‚Äì&gt; gfx
x ‚Äì&gt; gfx
X ‚Äì&gt;|f| Y
Y ‚Äì&gt;|g| Z</p>

<h1 id="comp109---russells-paradox"><a href="/UoL/comp109/lectures/2020/11/11/2.html">COMP109 - Russell‚Äôs Paradox</a></h1>
<p>Why is this set theory ‚ÄúNaive‚Äù? The reason is that is suffers from paradoxes.</p>

<p>A barber is the man who shaves all those, and only those, men who do not shave themselves.</p>

<ul>
  <li>Who shaves the barber?</li>
</ul>

<p>This statement and question form a paradox.</p>

<p>As yet we know that you should always write a predicate like so:</p>

<p>\[\{x\in A \vert  x \text{ satisfies some property}\}\]</p>

<p>Before Russell sets were just defined by their properties.</p>

<p>Russell‚Äôs Paradox shows that the ‚Äòobject‚Äô \(\{x\vert P(x)\}\) is not always meaningful.</p>

<p>Set \(A=\{B\vert B\notin B\}\)</p>

<p>Problem: do we have \(A\in A\)?</p>

<p>Abbreviate, for any set \(C\), by \(P(C)\) the statement \(C\notin\). Then \(A=\{B\vert P(B)\}\).</p>

<ul>
  <li>If \(A\in A\), then (from the definition of \(P\)), not \(P(A)\). Therefore \(A\notin A\).</li>
  <li>If \(A\notin A\), then (from the definition of \(P\)), \(P(A)\). Therefore \(A\in A\).</li>
</ul>

<p>This is the same contradiction that was reached in the opening statement.</p>

<p>This is the reason why we must draw the elements from another set to avoid this paradox. For example, in the definition of even numbers the predicate draws from the set of natural numbers:</p>

<p>\[x\in \mathbb{N} \vert  x=2k\ \text{for some int. }k\]</p>

<h1 id="comp109---cardinality-of-sets"><a href="/UoL/comp109/lectures/2020/11/11/1.html">COMP109 - Cardinality of Sets</a></h1>
<p>The cardinality of a set is the number of elements in the set. The notation for this is \(\vert A\vert\) where \(A\) is a set to be counted.</p>

<h2 id="power-set-and-bit-vectors">Power Set and Bit Vectors</h2>
<p>We use the correspondence between bit vectors and subsets: \(\left\vert  \text{\textit{Pow}}(A)\right\vert\) is the number of bit vectors of length \(n\).</p>

<p>\[A\ s.t \left\vert  A \right\vert  = n,\ S_n = \langle\ldots\rangle\]</p>

<p>\[B \subseteq A \rightarrow X_b = \underbrace{\left[\frac{0}{1},\ldots,\frac{0}{1}\right]}_n\]</p>

<p>A bit vector of the set \(C\) is represented by the vector \(X_C\):</p>

<p>\[X_c=\left[\ldots\right] \rightarrow C\]</p>

<p>This means that provided you know the set you and reconstruct a subset from the bit vector of that subset.</p>

<h2 id="the-number-of-n-bit-vectors-in-2n">The Number of \(n\)-bit vectors in \(2^n\)</h2>
<p>We prove the statement by induction</p>
<h3 id="base-case">Base Case:</h3>
<p>\(n=1\)</p>

<p>There are two bit vectors of length 1:</p>

<p>\(\left[0\right], \left[1\right]\)</p>

<p>\(2^1=2\)</p>

<h3 id="inductive-step">Inductive Step:</h3>
<p>Assume that the property holds for \(n=m\), so the number of \(m\)-bit vectors is \(2^m\). Now consider the set \(B\) of all \((m+1)\)-bit vectors. We must show that \(\left\vert B\right\vert =2^{m+1}\).</p>

<p>We know that all elements of \(B\) are bit vectors of length \(m+1\):</p>

<p>\[\underbrace{\left[\hspace{0.5cm},\right]}_{m+1}\in B\]</p>

<p>The first elements apart from the last one are put in a new bit vector:</p>

<p>\[\underbrace{\left[\ldots\right]}_m\]</p>

<p>Given any bit vector there are only two ways of filling in the last value, with a 0 or a 1. As there are two ways of extending a bit vector then you times the bit vector by two.</p>

<p>\[\left\vert  B \right\vert  = 2 \times 2^m = 2^{m+1}\]</p>

<h2 id="computing-the-cardinality-of-a-union-of-two-sets">Computing the Cardinality of a Union of Two Sets</h2>
<p>If \(A\) and \(B\) are sets then:</p>

<p>\[\left\vert  A \cup B \right\vert  = \left\vert  A \right\vert  + \left\vert  B \right\vert  - \left\vert  A\cap B \right\vert \]</p>

<h3 id="example">Example</h3>
<p>Suppose there are 100 third-year students. 40 of them take the module ‚ÄúSequential Algorithms‚Äù and 80 of them take the module ‚ÄúMulti-Agent Systems‚Äù. 25 of them took both modules. How many students took neither modules?</p>

<p>\(S=\{s\in \text{Student} \vert  s \text{ takes Seq. Alg.}\}\)<br />
\(M=\{s\in \text{Student} \vert  s \text{ takes Mult. Agent Systems}\}\)</p>

<ul>
  <li>\(\vert \text{Students}\vert  =100\)</li>
  <li>\(\vert S\vert =40\)</li>
  <li>\(\vert M\vert  = 80\)</li>
  <li>\(\vert S\cap M\vert  =25\)</li>
</ul>

<p>\(40+80-25=95=\vert S\cup M\vert \)
\(\vert \sim(S\cup M)\vert =100-95=5\)</p>

<p>Therefore, 5 students took neither as they were part of the universal set but not part of the union of the two subsets.</p>

<h2 id="computing-the-cardinality-of-a-union-of-three-sets">Computing the Cardinality of a Union of Three Sets</h2>
<p>If \(A\), \(B\) and \(C\) are sets then:</p>

<p>\[\vert A\cup B \cup C\vert = \vert A\vert  +\vert B\vert  + \vert C\vert  - \vert A\cap B\vert -\vert A\cap C\vert  - \vert B\cap C\vert  + \vert A\cap B\cap C\vert \]</p>

<p>This and the last union are special cases of the <strong>principle of inclusion and exclusion</strong>.</p>

<h2 id="principle-of-inclusion-and-exclusion">Principle of Inclusion and Exclusion</h2>
<p>Let \(A_1,A_2,\ldots,A_n\) be sets.</p>

<p>Then:</p>

<p>\[\left\vert A_1\cup\ldots\cup A_n\right\vert =\sum_{1\leq k\leq n} \left\vert A_i\right\vert -\sum_{1\leq j\leq k\leq n} \left\vert A_j \cap A_k\right\vert +\sum_{1\leq i\leq j\leq k\leq n} \left\vert A_i \cap A_j \cap A_k\right\vert \]
\[-‚Ä¶+(-1)^{n-1}\left\vert A_1\cap\ldots\cap A_n\right\vert \]</p>

<h1 id="comp109---tutorial-4"><a href="/UoL/comp109/tutorials/2020/11/10/1.html">COMP109 - Tutorial 4</a></h1>
<p>For the following questions:</p>

<ul>
  <li>\(\emptyset \in\{\text{Leeds, Liverpool}\}\)
    <ul>
      <li>False</li>
    </ul>
  </li>
  <li>\(\emptyset \subseteq\{\text{Leeds, Liverpool}\}\)
    <ul>
      <li>True</li>
    </ul>
  </li>
  <li>\(\emptyset = \{\}\)
    <ul>
      <li>False as they are different types.</li>
    </ul>
  </li>
</ul>

<h1 id="comp109---catch-up-session-5"><a href="/UoL/comp109/catch-up%20sessions/2020/11/09/1.html">COMP109 - Catch-up Session 5</a></h1>
<h2 id="example-1">Example 1</h2>
<p>\(A=\{1,2,7,8,9\}, B=\{x\in A\vert x \text{ is odd}\}\)</p>

<p>Where:</p>

<p>\(C=A-B=A\cap B\)</p>

<p>Therefore:</p>

<p>\(B=\{1,7,9\}\)</p>

<p>\(C=\{2,8\} = \{x\in A \vert x \notin B\}\)</p>

<h2 id="proving-identities">Proving Identities</h2>
<p>To prove an identity you would consider the sections of a Venn diagram and consider each of the four cases. These cover all of the locations in the Venn diagram.</p>

<h1 id="comp109---algebra-of-sets"><a href="/UoL/comp109/lectures/2020/11/06/1.html">COMP109 - Algebra of Sets</a></h1>
<p>Suppose that \(A,B,C,U\) are sets with \(A \subseteq U, B \subseteq U, C \subseteq U\).</p>

<h2 id="commutative-laws">Commutative Laws</h2>
<p>These laws say that is doesn‚Äôt matter in which order the operation takes place.</p>

<ul>
  <li>\(A\cup B = B \cup A\)</li>
  <li>\(A\cap B = B \cap A\)</li>
</ul>

<h2 id="associative-laws">Associative Laws</h2>
<p>These laws say that is doesn‚Äôt matter where you put brackets around an operation</p>

<ul>
  <li>\(A\cup(B\cup C)=(A\cup B) \cup C\)</li>
  <li>\(A \cap(B \cap C) = ( A \cap B) \cap C\)</li>
</ul>

<h2 id="distributive-laws">Distributive Laws</h2>
<p>This is how the properties of union and intersect propagate between one another. This applies to expanding brackets with mixed signs.</p>

<ul>
  <li>\(A\cap(B\cup C)=(A\cap B)\cup(A\cap C)\)</li>
  <li>\(A\cup(B\cap C)=(A\cup B)\cap(A\cup C)\)</li>
</ul>

<h2 id="identity-laws">Identity Laws</h2>
<p>The following sets only apply if there is a universe set or context which the sets are within.</p>

<p>If you join the empty set with anything you get what you joined it with. If you take the intersect of anything and the universe \(U\) then you get the thing you intersected it with.</p>

<ul>
  <li>\(A\cup \emptyset = A\)</li>
  <li>\(A\cap U = A\)</li>
</ul>

<h2 id="complement-laws">Complement Laws</h2>
<p>If you take a set and it‚Äôs complement (¬¨) then you get the universe set \(U\). The intersect of a set and its complement is the empty set.</p>

<ul>
  <li>\(A\cup\sim A = U\)</li>
  <li>\(A\cap\sim A=\emptyset\)</li>
</ul>

<h2 id="double-complement-law">Double Complement Law</h2>
<ul>
  <li>\(\sim(\sim A ) = A\)</li>
</ul>

<h2 id="idempotent-laws">Idempotent Laws</h2>
<ul>
  <li>\(A \cup A = A\)</li>
  <li>\(A \cap A = A\)</li>
</ul>

<h2 id="universal-bound-laws">Universal Bound Laws</h2>
<ul>
  <li>\(A\cup U = U\)</li>
  <li>\(A\cap \emptyset = \emptyset\)</li>
</ul>

<h2 id="de-morgans-law">De Morgan‚Äôs Law</h2>
<p>The complement of a union is the intersection of complements.</p>

<ul>
  <li>\(\sim(A\cup B) = \sim A\cap\sim B\)</li>
  <li>\(\sim(A\cap B) = \sim A\cup\sim B\)</li>
</ul>

<h2 id="absorption-laws">Absorption Laws</h2>
<p>This is a result of the expansion of brackets.</p>

<ul>
  <li>\(A\cup(A\cap B) = A\)</li>
  <li>\(A\cap(A\cup B) = A\)</li>
</ul>

<h2 id="complement-of-u-and-emptyset">Complement of \(U\) and \(\emptyset\)</h2>

<ul>
  <li>\(\sim U = \emptyset\)</li>
  <li>\(\sim \emptyset = U\)</li>
</ul>

<h2 id="set-difference-law">Set Difference Law</h2>

<ul>
  <li>\(A-B=A\cap\sim B\)</li>
</ul>

<h2 id="disclaimer-and-proofs">Disclaimer and Proofs</h2>
<p>As none of the above are axioms then you have to reference them if you use them in a proof.</p>

<h1 id="comp109---set-operations"><a href="/UoL/comp109/lectures/2020/11/03/3.html">COMP109 - Set Operations</a></h1>
<h2 id="union">Union</h2>
<p>The union of two sets \(A\) and \(B\) is the set: 
\[A\cup B = \{x\vert x\in A\ \text{or} \in B\}\]</p>

<p>This is the same as logical OR (\(+\))</p>

<h3 id="example">Example</h3>
<p>Suppose
\[A=\{4,7,8\},\ B=\{4,9,10\}\] 
Then
\[A\cup B = \{4,7,8,9,10\}\]</p>

<p>In bit vectors you just perform a logical OR on both of the bit vectors. The result of the OR is the bit vector of the result of the union.</p>

<h2 id="intersection">Intersection</h2>
<p>The intersection of two sets \(A\) and \(B\) is the set:
\[A\cap B = \{x\vert x\in A\ \text{and}\ x\in B\}\]</p>

<p>This is the same as logical AND.</p>

<h3 id="example-1">Example</h3>
<p>Suppose
\[A=\{4,7,8\},\ B=\{4,9,10\}\] 
Then
\[A\cap B = \{4\}\]</p>

<p>In bit vectors the result of the intersection is the same as a logical AND on the bit vectors.</p>

<h2 id="relative-complement">Relative Complement</h2>
<p>The relative complement of a set \(B\) to a set \(A\) is the set:
\[A-B=\{x\vert x\in A\ \text{and}\ x\notin B\}\]</p>

<p>This is the same as XOR (\(\oplus\))</p>

<p>This is also sometimes called the set difference.</p>
<h3 id="example-2">Example</h3>
<p>Suppose
\[A=\{4,7,8\},\ B=\{4,9,10\}\] 
Then
\[A - B = \{7,8\}\]</p>

<p>In bit vectors perform an XOR on both of the bit vectors to get the result.</p>

<h2 id="complement">Complement</h2>
<p>When we are dealing with subsets of some large set \(U\), then we call \(U\) the universal set fro the problem in question.</p>

<p>The complement of a set \(A\) is the set:
\[\sim A=\{x\vert x\notin A\}=U-A\]</p>

<p>This is the same as a binary NOT \(\neg\).</p>

<h3 id="example-3">Example</h3>
<p>Let
\[S=\langle1,2,3,4,5\rangle,\ A=\{1,3,5\}\]
Then
\[\sim A = \{2,4\}\]</p>

<h2 id="the-symmetric-difference">The Symmetric Difference</h2>
<p>The symmetric difference of two sets \(A\) and \(B\) is the set:
\[A\Delta B=\{x\vert (x\in A\ \text{and}\ x \notin B)\ \text{or}\ (x\notin A\ \text{and}\ x \notin B)\} \]</p>

<p>This is the same as the logical operator NAND.</p>

<h3 id="example-4">Example</h3>
<p>Suppose
\[A=\{4,7,8\},\ B=\{4,9,10\}\] 
Then
\[A - B = \{7,8,9,10\}\]</p>

<p>In bit vectors perform an NAND on both of the bit vectors to get the result.</p>

<h3 id="proving-the-identity-of-adelta-bacup-b-acap-b">Proving the Identity of \(A\Delta B=(A\cup B)-(A\cap B)\)</h3>
<h4 id="proof">Proof</h4>
<p>Suppose that \(x\) is a particular but arbitrarily chosen element. Consider all cases of this element:</p>

<h5 id="case-1">Case 1</h5>
<p>\(x\notin A,\ x\notin B\). By definition of \(\Delta,\ x\notin A\Delta B\).</p>

<p>By definition of \(\cup,\ x\notin A\cup B\).</p>

<p>Hence \((A\cup B)-(A\cap B)\).</p>

<h5 id="case-2">Case 2</h5>
<p>\(x\in A,\ x\notin B\). By definition of \(\Delta,\ x\in A\Delta B\)</p>

<p>By definition of \(\cup,\ x\in A\cup B\) as \(x\in A\).</p>

<p>As \(x\notin B,\ x\notin A\cap B\).</p>

<p>So \(x\in(A\cup B)-(A\cap B)\).</p>

<h5 id="case-3">Case 3</h5>
<p>\(x\notin A,\ x\in B\). This case is symmetric to case 2.</p>

<h5 id="case-4">Case 4</h5>
<p>\(x\in A,\ x\in B\). By definition of \(\Delta,\ x\notin A\Delta B\).</p>

<p>As \(x\in A\), by definition of \(\cup,\ x\in A\cup B\).</p>

<p>As \(x\in A,\ x\in B,\ x\in A\cap B\).</p>

<p>So \(x\notin (A\cup B)-(A\cap B)\).</p>

<p>By the generalisation from the generic particular principle, the identity holds.</p>

<p>(As both sides are equal for all cases the identity must be valid.)</p>

<h1 id="comp109---subsets-and-set-equality"><a href="/UoL/comp109/lectures/2020/11/03/2.html">COMP109 - Subsets and Set Equality.</a></h1>
<h2 id="subsets">Subsets</h2>
<p>A set \(B\) is called a subset of a set \(A\) if every element of \(B\) is an element of \(A\). This is denoted by \(B\subseteq A\).</p>

<h3 id="examples">Examples</h3>
<p>\[\{3,4,5\}\subseteq\{1,5,4,2,1,3\},\ \{3,3,5\}\subseteq\{3,5\},\ \{5,3\}\subseteq\{3,5\}\]</p>

<pre><code class="language-mermaid">graph TB
    subgraph A
    B(B)
    end
</code></pre>
<p><em>Venn diagram of \(B\) subset \(A\).</em></p>

<p class="info">Therefore, \(\forall\) sets \(A\), \(A\subseteq A\)</p>

<p>Furthermore, \(\emptyset\subseteq A\) is always true. This is as the empty set is always a subset of any other set including the empty set itself.</p>

<h4 id="subsets-in-python">Subsets in Python</h4>
<p>In programming languages such as python you can save on writing out a function to fund whether a set is a subset of another set. To do this you can use the <code class="language-plaintext highlighter-rouge">&lt;</code> symbol in place of the \(\subseteq\) symbol:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span> <span class="n">n</span><span class="o">&lt;</span><span class="n">m</span>
</code></pre></div></div>

<p>Where <code class="language-plaintext highlighter-rouge">n</code> and <code class="language-plaintext highlighter-rouge">m</code> are both sets.</p>

<h3 id="subsets-and-bit-vectors-example">Subsets and Bit Vectors Example</h3>
<p>Let \(S=\langle1,2,3,4,5\rangle,A=\{1,3,5\}\) and \(B=\{3,4\}\).</p>

<ul>
  <li>
    <p>Is \(A\subseteq B\)?</p>

    <p>\(x_a=[1,0,1,0,1]\)<br />
  \(x_b=[0,0,1,1,0]\)</p>

    <p>Therefore \(A\nsubseteq B\). As you can see from the aligned bits. Not all the bits present in \(x_b\) are present in \(x_a\).</p>
  </li>
  <li>
    <p>Is the set \(C\), represented by \([1,0,0,0,1]\), a subset  of the set \(D\), represented by \([1,1,0,0,1]\)?</p>

    <p>\(C\subseteq D\) as all bits present in the bit vector of \(C\) are also present in the bit vector of \(D\).</p>
  </li>
</ul>

<h2 id="equality">Equality</h2>
<p>As covered before a set \(A\) is called equal to a set \(B\) if \(A\subseteq B\) and \(B\subseteq A\). This is denoted by \(A=B\).</p>

<p>This is to say that if two sets are subsets of each other then they are equal.</p>

<h3 id="confirming-equality">Confirming Equality</h3>
<p>Let \(S=\langle1,2,3,4,5\rangle,A=\{1,3,5\}\) and \(B=\{3,4\}\).</p>

<h4 id="is-ab">Is \(A=B\)?</h4>
<p>\(x_a=[1,0,1,0,1]\)<br />
\(x_b=[0,0,1,1,0]\)</p>

<p>Therefore \(A\neq B\) as the bit vectors do not match.</p>

<h1 id="comp109---naive-set-theory"><a href="/UoL/comp109/lectures/2020/11/03/1.html">COMP109 - (Naive) Set Theory</a></h1>
<h2 id="notation-for-sets">Notation for Sets</h2>
<p>A set is a collection of objects, called the elements of the set.</p>

<ul>
  <li>\(\{7,5,3\}\)</li>
</ul>

<p>We have written down the element of each set and contained them between the braces \(\{\}\).</p>

<p>Repetitions and orderings don‚Äôt matter in sets hence \(\{7,5,3\}\) is the same as \(\{5,3,3,3,7\}\).</p>

<p>We write \(a\in A\) to denote that the object \(a\) is an element of the set \(a\): \[7\in\{7,5,3\},4\notin\{7,5,3\}\]</p>

<p class="info">The order of elements does not matter.</p>

<p class="info">Repetitions don‚Äôt count.</p>

<p>For a large set, especially an infinite set, we cannot write down all the elements. We use a <strong>predicate</strong> \(P\) instead.
\[A=\{x\in S\vert P(x)\]
denotes the set of objects \(x\) from \(S\) fro which the predicate \(P(x)\) is true.</p>

<h3 id="example">Example</h3>
<p>Let:
\[A = \{1,3,5,7,\ldots\}\]
Then:
\[A=\{x\in \mathbb{Z} \vert x \text{ is odd}\}\]</p>

<h2 id="more-examples">More Examples</h2>
<p>Find simpler descriptions of the following sets by listing their elements. (The set \(A\) is written properly however \(B\) and \(C\) are written informally.</p>

<ol>
  <li>
    <p>\(A=\{x\in\mathbb{z}\vert x^2+4x=12\}\)</p>

    <p>\(\{2,-6\}\)</p>
  </li>
  <li>
    <p>\(B=\{n^2\vert n \text{ is an integer}\}\)</p>

    <p>\(\{0,1,4,9,16,25,\ldots\}\)</p>

    <p>\(B=\{m\in\mathbb{Z}\vert m=n^2 \text{ for some integer } n\}\)</p>
  </li>
  <li>
    <p>\(C=\{x\vert x \text{ a day of the week not containing ‚Äúu‚Äù}\}\)</p>

    <p>\(\{\text{Monday, Wednesday, Friday}\}\)</p>
  </li>
</ol>

<h2 id="important-sets">Important Sets</h2>
<p>The empty set had no elements. It is written as \(\emptyset\) or as \(\{\}\).</p>

<p>Here are some other sets:</p>

<ul>
  <li>\(\mathbb{N}=\{0,1,2,3,\ldots\}\) The natural numbers.</li>
  <li>\(\mathbb{Z}=\{\ldots,-2,-1,0,1,2,\ldots\}\) The integers.</li>
  <li>\(\mathbb{Z^+}=\{1,2,3,\ldots\}\) The positive integers.</li>
  <li>\(\mathbb{Q}=\{\frac{x}{y}\vert x \in\mathbb{Z},y\in\mathbb{Z},y\neq0\}\) The rationals.</li>
  <li>\(\mathbb{R}\) Real numbers.
    <ul>
      <li>\([a,b]=\{x\in\mathbb{R}\vert a\leq x \leq b\}\) The set of real numbers between \(a\) and \(b\) inclusive.</li>
    </ul>
  </li>
</ul>

<h2 id="computer-representation-of-sets">Computer Representation of Sets</h2>
<p>Only finite sets can represented.</p>

<ul>
  <li>Number of elements not fixed.
    <ul>
      <li>Lists</li>
    </ul>
  </li>
  <li>All elements of \(A\) are drawn from some ordered sequence \(S=\langle s_1,\ldots,s_n\rangle\). The characteristic vector of \(A\) is the sequence \([b_1,\ldots,b_n]\) where:
\[
  b_i=
  \begin{cases}
    1 &amp; \text{if}\ S_i\in A \\
    0 &amp; \text{if}\ S_i\notin A
  \end{cases}
\]</li>
  <li>Sequences of zeros and ones of length \(n\) are called bit strings of length \(n\). These are also known as bit vectors or bit arrays.</li>
</ul>

<h3 id="examples">Examples</h3>
<p>Let \(S\langle 1,2,3,4,5\rangle, A = \{1,3,5\}\) and \(B=\{3,4\}\)</p>

<ul>
  <li>Characteristic vectors show how sets relate to sequences. The \(1\) shows that the value is in the set.
    <ul>
      <li>The characteristic vector of \(A\) is \([1,0,1,0,1]\).</li>
      <li>The characteristic vector of \(B\) is \([0,0,1,1,0]\).</li>
    </ul>
  </li>
  <li>You would answer a question in the opposite direction like so:
    <ul>
      <li>The set characterised by \([1,1,1,0,1]\) is \(\{1,2,3,5\}\).</li>
      <li>The set characterised by \([1,1,1,1,1]\) is \(\{1,2,3,4,5\}\).</li>
      <li>The set characterised by \([0,0,0,0,0]\) is \(\emptyset\).</li>
    </ul>
  </li>
</ul>

<h1 id="comp109---common-mistakes-and-good-practice"><a href="/UoL/comp109/lectures/2020/10/29/3.html">COMP109 - Common Mistakes and Good Practice</a></h1>
<h2 id="definitions-of-supplementary-statements">Definitions of Supplementary Statements</h2>
<p>Conjectures are built on other conjectures. They can be subdivided into the following parts:</p>

<ul>
  <li>Theorem
    <ul>
      <li>A very important true statement.</li>
    </ul>
  </li>
  <li>Proposition
    <ul>
      <li>A less important by still interesting statement.</li>
    </ul>
  </li>
  <li>Lemma
    <ul>
      <li>A true statement used to prove other statements.</li>
    </ul>
  </li>
  <li>Corollary
    <ul>
      <li>A simple consequence of a theorem or a proposition.</li>
    </ul>
  </li>
</ul>

<h2 id="finishing-proofs">Finishing Proofs</h2>
<p>At some point in a proof, you‚Äôll have established all the essential facts you need. Resist the temptation to quit and leave the reader to draw the ‚Äúobvious‚Äù conclusion. Instead, tie everything together yourself and explain why the original claim follows.</p>

<p>In addition, at the end of a proof use the Latin phrase, ‚Äú\(_\text{QED}\)‚Äù or \(\square\) to show that you have finished the proof.</p>

<h1 id="comp109---strong-induction"><a href="/UoL/comp109/lectures/2020/10/29/2.html">COMP109 - Strong Induction</a></h1>
<p>For a normal case of mathematical induction you can prove that a statement holds for all numbers from a particular start point.</p>

<p>It uses a base case so show that it holds for an individual number and an induction rule that proves that it holds for all numbers following.</p>

<ul>
  <li>Prove that the property holds for the natural number \(n=0\)</li>
  <li>Prove that if the property holds for \(n=0,1,\ldots,m\) (and not just for m) then it holds for \(n=m+1\).</li>
</ul>

<p>Can also be used to prove a property for all integers greater than or equal to some particular natural number \(b\).</p>

<h2 id="example-1">Example 1</h2>
<p>Every natural number \(n \geq 2\), is a prime or product of primes.</p>

<h3 id="base-case">Base Case</h3>
<p>Take \(n=2\)</p>

<p>Then \(n\) is a prime number.</p>

<h3 id="inductive-step">Inductive Step</h3>
<p>Assume that the property holds for \(n=m\) so every number \(i\) such that \(2\leq i\leq m\) is a prime or a product of primes.</p>

<p>Now consider \(n=m+1\).</p>

<p>We proceed by considering cases.</p>

<h4 id="case-1">Case 1</h4>
<p>\(m+1\) is prime.</p>

<p>There is nothing to prove.</p>

<h4 id="case-2">Case 2</h4>
<p>\(m+1\) is not prime.</p>

<p>So \(m+1=k\times l\), where \(k\neq1,\ k\neq m+1\) and \(l\neq 1,\ l\neq\ m+1\)</p>

<p>So \(k\geq2,\ l\geq2,\ k\leq m,\ l \leq m\)</p>

<p>So \(k=P_1\ldots P_n,\ l=Q_1\ldots Q_m\). Then \(k\times l\) is a product of primes.</p>

<h2 id="example-2">Example 2</h2>
<p>For any integer \(n\geq1\), if \(x_1,x_2,\ldots,x_n\) are \(n\) numbers, then no matter how the parentheses are inserted into their product, the number of multiplications used to compute the products is \(n-1\).</p>

<p class="info">As the number are all individual you can‚Äôt use tricks like using already computed values to speed up the computation.</p>

<h3 id="base-case-1">Base Case</h3>
<p>\[
X_1 \text{ for } n=1,\ n-1=0
\]</p>

<h3 id="induction-step">Induction Step</h3>
<p>Suppose that no matter how I put parentheses on a sequence of \(i\) elements, where \(1\leq i\leq m\), I need \(m-1\) multiplications.</p>

<p>Consider, where \(1\leq l \leq m\):
\[
\underbrace{\underbrace{(x_1\times\ldots)}<em>{l}\times\underbrace{(\ldots\times x</em>{m+1})}<em>{m+1-l}}</em>{m+1}
\]</p>

<p>By induction hypothesis
\[\require{cancel}\cancel{l}-1+m+1-\cancel{l}-\cancel{1}+\cancel{1}=(m+1)-1\]</p>

<p>This proves that the property holds for the next value to infinitude. \(\square\)</p>

<h1 id="comp109---proving-properties-of-programs"><a href="/UoL/comp109/lectures/2020/10/29/1.html">COMP109 - Proving Properties of Programs</a></h1>
<p>Using induction to show that a program is correct.</p>
<h2 id="example-on-a-recursive-function-that-generates-factorials">Example on a Recursive Function that Generates Factorials</h2>
<h3 id="proof">Proof</h3>
<p>By mathematical induction on \(n\).</p>

<h4 id="base-case-n1">Base Case \(n=1\)</h4>
<p>\[g(1)=1=1!\]</p>

<h4 id="inductive-step">Inductive Step</h4>
<p>Suppose that for some \(n=m, g(n)=n!\)</p>

<p>Consider \(n=m+1\)</p>

<p>\(g(m+1)\) the code returns \(g(m)\times(m+1)\)</p>

<p>By induction hypothesis, \(g(m)=m!\)</p>

<p>So: 
\[g(m)\times(m+1)=m!\times(m+1)=(m+1)!\]</p>

<h1 id="comp109---mathematical-induction"><a href="/UoL/comp109/lectures/2020/10/28/2.html">COMP109 - Mathematical Induction</a></h1>
<ul>
  <li>They are used to check conjectures about outcomes of processes that occur repeatedly and according to definite patterns.</li>
  <li>In general, mathematical induction is a method for proving that a property defined for integers \(n\) is true for all values of \(n\) that are greater than or equal to come initial integer.</li>
</ul>

<h2 id="generic-particular-vs-induction-for-universal-statements">Generic Particular v.s. Induction for Universal Statements</h2>
<h3 id="generalisation-from-the-generic-particular">Generalisation from the generic particular:</h3>

<p class="info">‚ÄúSuppose that \(x\) is a particular but arbitrarily chosen‚Ä¶‚Äù ‚Äú‚Ä¶property holds for this \(x\)‚Ä¶‚Äù ‚Äú‚Ä¶then the property holds for all \(x\)‚Äù</p>

<p>This argument states that as we have chosen an arbitrary value from a set then the argument will hold for all numbers within the same set.</p>

<h2 id="induction">Induction</h2>
<p>We apply a process to all the values in a set. This process is carried on until an arbitrary value is reached.</p>

<ul>
  <li>Prove that the property holds for some initial value (e.g. \(n=0\)).</li>
  <li>Prove that if the property hold for \(n=m\) (for any natural number \(m\)) then it holds for \(n=m+1\).</li>
</ul>

<h3 id="example">Example</h3>
<p>For a set of dominoes the following process can be applied:</p>

<p>For a domino at position \(i\), when it is pushed the domino at position \(i+1\) will fall sequentially.</p>

<p>The conclusion can be that all of the dominoes will fall.</p>

<h3 id="typical-structure">Typical Structure</h3>
<p>We prove the statement by mathematical induction on \(n\).</p>

<h4 id="base-case">Base Case</h4>
<p>Show that the property hold for some initial value (e.g. \(n=0\)).</p>

<h4 id="inductive-step">Inductive Step</h4>
<p>Assume that the property holds for \(n=m\). Show that is hold for \(n=m+1\).</p>

<h4 id="conclusion">Conclusion</h4>
<p>You can now conclude that the property holds for every natural number \(n\).</p>

<h3 id="carl-friedrich-gauss">Carl Friedrich Gauss</h3>
<p>\[1+\ldots+100=5050\]</p>

<p>If you split the number line in the middle the sum of every column is 101. With 50 columns the answer is 5050.</p>

<p>For every natural number \(n\), 
\[0+1+\ldots+n=\frac{n(n+1)}{2}\]</p>

<h4 id="proof">Proof</h4>
<h5 id="base-case-1">Base Case</h5>
<p>\(n=0\)</p>

<p>\(0 = \frac{0(0+1)}{2} = 0\)</p>

<h5 id="inductive-step-1">Inductive Step</h5>
<p>Suppose that for \(n=m\) the property holds.</p>

<p>Then \[0+1+\ldots+m=\frac{m(m+1)}{2}\]</p>

<p>Consider the statement for \(n=m+1\).</p>

<p>\(0+1+2+\ldots+m+(m+1)\).</p>

<p>By induction hypothesis, \(0+1+\ldots+m=\frac{m(m+1)}{2}\)</p>

<p>So, \(0+1+\ldots+m+(m+1)=\frac{m(m+1)}{2}+(m+1)\)</p>

<p>\(=\frac{m(m+1)}{2}+\frac{2(m+1)}{2}=\frac{m(m+1)+2(m+1)}{2}\)</p>

<p>\(=\frac{(m+1)(m+2)}{2}=\frac{(m+1)((m+1)+1)}{2}=\frac{n(n+1)}{2}\)</p>

<p>This shows that for any sequential number the fraction simplifies to the statement, thus proving that it holds for any number.</p>

<h1 id="comp109---week-2-summary-continued"><a href="/UoL/comp109/lectures/2020/10/28/1.html">COMP109 - Week 2 Summary Continued</a></h1>
<h2 id="two-classic-results">Two Classic Results</h2>
<p>These are classical proofs as they we‚Äôre proven by the Ancient Greeks. They are both proofs by contradiction.</p>

<h3 id="use-proof-by-contradiction-to-show-that-there-is-no-greatest-prime-number">Use proof by contradiction to show that there is no greatest prime number.</h3>
<ul>
  <li>2, as the smallest prime number, is known as \(P_1\). All following prime numbers are numbered sequentially.</li>
  <li>For each prime number that is identified any multiples are removed from the endless list of integers.
    <ul>
      <li>This is continued for \(P_2=3\) where all multiples of 3 are removed.</li>
    </ul>
  </li>
</ul>

<p class="warning">How do we know that at some point in the list all numbers are eliminated?</p>

<h4 id="proof">Proof</h4>
<p>Assume for a proof by contradiction that there is a greatest prime number \(P_n\).</p>

<p>Then \(P_1, P_2, \ldots , P_n\) are all prime numbers.</p>

<p>Consider \(P=P_1\times P_2\times \ldots \times P_{n+1}\)</p>

<p>Consider cases:</p>

<h5 id="case-1">Case 1</h5>
<p>\(P=P_1\times P_2\times \ldots \times P_{n+1}\) is prime. As \(P&gt;P_n\) we derive a contradiction.</p>

<h5 id="case-2">Case 2</h5>
<p>\(P\) is not a prime. Then \(P\) has a divisor (all numbers can be expressed as a product of primes).</p>

<p>Then \(P\) has a prime factor.</p>

<p>So one of \(P_1, P_2, \ldots , P_n\) must divide \(P\). This number can be called \(P_i\).</p>

<p>\(P=P_i\times Q,\ Q\neq 1\)</p>

<p>\(P_1\times\ldots P_{n+1}=P_i\times Q\)</p>

<p>\(P_1\times\ldots P_{i-1} \times P_i \times P_{i+1} \times\ldots P_{n+1}=P_i\times Q\)</p>

<p>\(P_i \times Q - P_i (P_1 \times\ldots\times P_{i-1} \times P_{i+1} \times P_n)=1\)</p>

<p>\(P_i(Q-P_1 \times\ldots\times P_{i-1} \times P_{i+1} \times\ldots\times P_n) = 1\)</p>

<p>This is a contradiction as one is not a product of two distinct integers.</p>

<p>As a result the statement that there is no greatest prime number.</p>

<h3 id="prove-that-sqrt2-is-not-a-rational-number">Prove that \(\sqrt{2}\) is not a Rational Number</h3>
<p>Assume for a proof by contradiction that \(\sqrt{2}\) is rational.</p>

<p>Then there exist integers \(m,n\) such that \(\sqrt{2}=\frac{m}{n}, n\neq 0, \frac{m}{n}\) is not reducible.</p>

<p>Then \((\sqrt{2})^2=(\frac{m}{n})^2\). Then \(2=\frac{m^2}{n^2}\).</p>

<p>Then \(2n^2=m^2\). So \(m^2\) is even.</p>

<p>We already know that \(m\) must be even.</p>

<p>By definition of even \(m=2k\) for some integer \(k\).</p>

<p>\(2n^2=m^2, m=2k\)</p>

<p>\(2m^2=(2k)^2\). Then \(2n^2=4k^2\). Then \(n^2=2k^2\), so \(n^2\) is even.</p>

<p>Then \(n\) is even.</p>

<p>So we derive a contradiction as n and m have a common factor of \(2\). As it is reducible it doesn‚Äôt follow the rule.</p>

<h2 id="indirect-proof-of-existential-statements">Indirect Proof of Existential Statements</h2>
<p>Prove that there exist irrational numbers \(q\) and \(r\) such that \(q^r\) is rational.</p>

<p>Consider Cases:</p>

<h3 id="case-1-1">Case 1</h3>
<p>If \(\sqrt{2}^{\sqrt{2}}\) is a rational number then we are done and \(q=\sqrt2, r=\sqrt2\).</p>

<h3 id="case-2-1">Case 2</h3>
<p>\(\sqrt{2}^{\sqrt{2}}\) is not rational. Then:</p>

<p>\(q=\sqrt{2}^{\sqrt{2}}, r=\sqrt2\)</p>

<p>\(q^r = (\sqrt2^{\sqrt2})^{\sqrt2}=\sqrt2^{\sqrt2\sqrt2}=\sqrt2^2=2\)</p>

<h1 id="comp109---week-2-summary"><a href="/UoL/comp109/lectures/2020/10/26/1.html">COMP109 - Week 2 Summary</a></h1>
<h2 id="more-examples-of-direct-proof">More Examples of Direct Proof</h2>
<ol>
  <li>\(\forall\ n\) if \(n\) is an integer then \(n\) is rational.
    <ul>
      <li>Proof: Suppose that \(n\) is a particular but arbitrarily chosen integer.
        <ul>
          <li>\(n=\frac{n}{1}\)
            <ul>
              <li>By definition of a rational number \(\frac{n}{1}\) is rational.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>\(\forall\ r\) and \(s\), if \(r,s\) are rational then \(r+s\) is rational.
    <ul>
      <li>Proof: Suppose that \(r\) and \(s\) are particular but arbitrarily chosen rational numbers.
        <ul>
          <li>As \(r\) is rational \(r=\frac{l}{m}\) where \(l,m\) are integers, \(m\neq 0\).</li>
          <li>As \(s\) is rational \(s=\frac{i}{k}\) where \(i,k\) are integers, \(k\neq 0\).
            <ul>
              <li>Then \(r+s = \frac{l}{m} + \frac{i}{k} = \frac{lk+mi}{mk}\)
                <ul>
                  <li>As \(m\neq 0, k\neq 0\) we derive that \(mk\neq 0\)</li>
                  <li>As \(lk+mi,mk\) are integers, \(mk\neq 0\) we conclude that \(r+s\) is a rational number.</li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<h2 id="proof-by-cases">Proof by Cases</h2>
<p>For proofs that have multiple cases then you can prove that the statement holds for each case to give a universal proof.</p>

<h3 id="example-1">Example 1</h3>
<p>For all integers \(n,\ n^2 + n\) is even.</p>

<h4 id="proof">Proof</h4>
<p><strong>Case 1:</strong> \(n\) is even</p>

<ul>
  <li>Then \(n=2k\), for some integer \(k\)</li>
  <li>\((2k)^2+2k=4k^2+2k=2(2k^2+k)\)
    <ul>
      <li>By definition of even, \(n^2 + n\) is even.</li>
    </ul>
  </li>
</ul>

<p><strong>Case 2:</strong> \(n\) is odd</p>

<ul>
  <li>Then \(n=2k+1\), for some integer \(k\).</li>
  <li>\((2k+1)^2+(2k+1)=4k^2+6k+2=2(2k^2+3k+1)\)
    <ul>
      <li>By definition of even, \(n^2 + n\) is even.</li>
    </ul>
  </li>
</ul>

<p>As both cases (which are all cases) conclude the same thing then the statement is considered proved.</p>

<h3 id="example-2">Example 2</h3>
<p>Prove that the product of any two consecutive integers is even.</p>

<h4 id="rewording">Rewording</h4>
<p>\(\forall\ n\) if \(n\) is an integer then \(n(n+1)\) is even.</p>

<h4 id="proof-1">Proof</h4>
<p>Consider that \(n\) is a particular but arbitrarily chosen integer. We proof the statement by a consideration of cases.</p>

<p><strong>Case 1:</strong> \(n\) is even.</p>

<ul>
  <li>Then \(n=2k\).
    <ul>
      <li>So \(n(n+1)=2k(2k+1)\).</li>
    </ul>
  </li>
</ul>

<p><strong>Case 2:</strong> \(n\) is odd.</p>

<ul>
  <li>Then \(n=2k+1\), for some integer \(k\).
    <ul>
      <li>So \(n(n+1)=(2k+1)((2k+1)+1)= (2k+1)(2k+2)\) \(= 2(2k+1)(k+1)\).</li>
    </ul>
  </li>
</ul>

<h2 id="indirect-proofs">Indirect proofs</h2>
<p>In a direct proof you start with the hypothesis and make deductions until you reach the conclusion.</p>

<p>For an indirect proof you can make use of contradictions to prove statements logically. An example may be in a Sudoku puzzle where you prove which number goes in a square based on the fact that it can‚Äôt be any other number.</p>

<h3 id="proof-by-contradiction">Proof by Contradiction</h3>
<p>If it is not the case that it is not true. It must be the case that it is true.</p>

<pre><code class="language-mermaid">graph LR
D[Definitions] --&gt; C[Contradiction]
K[Known Facts] --&gt; C
N[Negated Conjecture] --&gt; C
</code></pre>

<h4 id="examples">Examples</h4>
<ol>
  <li>
    <p>Show that there is not greatest integer.</p>

    <p>Proof: Suppose for a proof by contradiction that the conjecture is not true.<br />
 Then there is an integer larger than any other integer.<br />
 Let \(N\) be such an integer.
 So \(N&gt;N+1\) and therefore 0&gt;1, which is a contradiction.<br />
 Therefore, our  assumption that the conjecture is not true is false. So there is no greatest integer.</p>
  </li>
  <li>
    <p>No integer can be both even and odd.</p>

    <p>Proof: Suppose for a proof by contradiction that this conjecture is not true.<br />
 Then there exists an integer \(N\) which is both even and odd.<br />
 By definition of even, \(n=2l\), for some integer \(l\). 
 By definition of odd, \(n=2k+1\), for some integer \(k\).<br />
 \(2l=n=2k+1\). So \(2l=2k+1\). Then \(2l-2k=1\). Then \(2(k-l) = 1\).<br />
 Then 1 must be even, which is a contradiction.<br />
 Therefore, we can conclude that no integer can be both even and odd.</p>
  </li>
</ol>

<h3 id="proof-by-contraposition">Proof by Contraposition</h3>
<p>To prove 
\[\forall \text{ if } P(x) \text{ then } Q(x)\]
it suffices to prove<br />
\[\forall \text{ if not } P(x) \text{ then not } Q(x)\]</p>

<h4 id="example">Example</h4>
<ol>
  <li>For all integers \(m\) if \(m^2\) is even then \(m\) is even.
    <ul>
      <li>For all integers \(m\) if \(m\) is not even then \(m^2\) is not even.</li>
    </ul>

    <p>This can be re-written as:</p>

    <ul>
      <li>For all integers \(m\) if \(m\) is odd then \(m^2\) is odd.</li>
    </ul>
  </li>
</ol>

<p>This can then be taken into a direct proof however it may make more sense to prove by contradiction instead of contraposition and it is the preferred method at this time.</p>

<h1 id="comp109---continuation-of-week-1-summary"><a href="/UoL/comp109/lectures/2020/10/25/1.html">COMP109 - Continuation of Week 1 Summary</a></h1>
<h2 id="proving-existential-statements">Proving Existential Statements</h2>
<p>An existential statement is a statement in the form: 
\[\exists x\ Q(x)\]
This means that there exists a value to which the function \(Q(x)\) holds true. This may be under additional parameters.</p>

<p>The easiest way to prove this is to find an \(x\) that makes the function \(Q(x)\) true. Not all can be proved this way.</p>

<h3 id="examples">Examples</h3>
<ol>
  <li>\(\exists\) an even integer \(n\) that can be written in two ways as a sum of two prime numbers. 
 \[10=5+5=7+3\]</li>
  <li>There \(\exists\) integers \(m\) and \(n\) such that \(m&gt;1\), \(n&gt;1\) and \(\frac{1}{m} + \frac{1}{n}\) is an integer.
 \[m=n=2\]
     Giving an example is a suitable proof.</li>
</ol>

<h2 id="proving-universal-statements">Proving Universal Statements</h2>
<p>Generally proofs will require you to answer a universal statement rather than an existential one. an existential statement is of the form:
\[\forall x \text{ if } P(x) \text{ then } Q(x)\]
This means that for all of \(x\) if one function is applied to \(x\) another function in \(x\) also holds true. For example:</p>

<p class="info">If \(a\) and \(b\) are integers then \(6a^2b\) is even.</p>

<p>In this statement the ‚Äú\(a\) and \(b\) are integers‚Äù count for \(P(x)\) and ‚Äú\(6a^2b\) is even‚Äù counts for \(Q(x)\).</p>

<p>\(6a^2b\)</p>

<p>\(2(3a^2b)\)</p>

<p>By halving you are proving that the answer is even as it is a multiple of two.</p>

<h3 id="proof-by-exhaustion">Proof by Exhaustion</h3>
<p>For theorems examining a relatively small number of examples you can test each value to see if the statement holds true. That is proof by exhaustion.</p>

<h4 id="example">Example</h4>
<ul>
  <li>Prove that \((n+1)^3 \geq 3^n\) if \(n\) is a positive number.</li>
</ul>

<p>As this theorem has such a small scope then each value can be tested to see if it is correct.</p>

<h3 id="generalising-from-the-generic-particular">Generalising from the Generic Particular</h3>
<p>This method allows for using algebra and known rules to prove a statement generally.</p>

<h4 id="method">Method</h4>
<ul>
  <li>Express the statement to be provided in the form \(\forall x,\text{ if } P(x) \text{ then } Q(x)\)</li>
  <li>Start the proof by supposing \(x\) is a particular by arbitrarily chosen element for which the hypothesis \(P(x)\) is true.</li>
  <li>Show that the conclusion \(Q(x)\) is true by using definitions, previously established results, and the rules for logical inference.</li>
</ul>

<pre><code class="language-mermaid">graph LR
Definitions --&gt; A[Conjecture]
B[Known Facts] --&gt; A
</code></pre>

<p class="info">This method brings together definitions and facts into a conjecture.</p>

<h3 id="example-1">Example</h3>
<p>Prove that the sum of any two even integers is even.</p>

<ol>
  <li>(Assume that/Suppose that) \(m\) and \(n\) are particular but arbitrarily chosen even integers.</li>
  <li>As we assumed that \(m\) is an even integer, \(m = 2k\) for some integer \(k\).</li>
  <li>Likewise \(n\) is an even integer, \(n = 2l\), for some integer \(l\)
    <ul>
      <li>We cannot use the same letter again as \(k\) has already been used</li>
    </ul>
  </li>
  <li>Then \(m+n=2k+2l=2(k+l)\), which is even as \(k+l\) is an integer.</li>
</ol>

<p>The final step is called the conjecture as is aided by the previous steps to explain why the conjecture holds true.</p>

<h3 id="disproving-universal-statement-by-counterexample">Disproving Universal Statement by Counterexample</h3>
<p>To disprove a statement means to show that it is false. For example, for a statement such as:
\[\forall x \text{ if } P(x) \text{ then } Q(x)\]
You are saying that the opposite is true:
\[\exists x \text{ such that } P(x) \text{ and not } Q(x)\]</p>

<p>This means that you must give at least one example that disproves the universal statement.</p>

<h4 id="example-2">Example</h4>
<p>Is it true that for every positive integer \(n,n^2\geq 2n\)?</p>

<p>No as for \(n=1,\ n^2 = 1\) and \(2n=2\) which is greater than \(n^2\)</p>

<p class="info">You can correct this by stipulating that for ever integer greater than one the statement holds true.</p>

<h1 id="comp109---week-1-summary"><a href="/UoL/comp109/lectures/2020/10/24/1.html">COMP109 - Week 1 Summary</a></h1>
<h2 id="notion-of-proof">Notion of Proof</h2>
<h3 id="types-of-numbers">Types of Numbers</h3>
<ul>
  <li>Natural numbers \(\mathbb{N}\) are whole numbers that start from 0.</li>
  <li>Integers are whole numbers including negatives.</li>
  <li>Rational numbers are any number that can be represented as fractions without a denominator of 0.</li>
  <li>Real numbers are any decimal number that can be presented on a number line. E.g. \(\pi\)</li>
</ul>

<h3 id="proofs">Proofs</h3>
<p>A mathematical proof is a carefully reasoned argument to convince a sceptical listener that a statement is true.</p>

<h2 id="properties-of-odd-and-even-numbers">Properties of Odd and Even Numbers</h2>
<p>An even number \(m\) is in the form \(m = 2k\) where \(k\) is an integer.</p>

<p>An odd number \(n\) is in the form \(n= 2l+1\) where \(l\) is an integer.</p>

<h3 id="notation">Notation</h3>
<ul>
  <li>The symbol \(\exists\) means exists.</li>
  <li>The symbol \(\Leftrightarrow\) means if and only if.</li>
  <li>The symbol \(\forall\) means for all.</li>
</ul>

<p>Some definitions written in notation may look like:</p>

<ul>
  <li>
    <p>\(n\) is even \(\Leftrightarrow \exists\)  an integer \(k\) such that \(n=2k\)</p>
  </li>
  <li>
    <p>\(n\) is odd \(\Leftrightarrow \exists\)  an integer \(k\) such that \(n=2k+1\)</p>
  </li>
</ul>

<h1 id="comp109---tutorial-1"><a href="/UoL/comp109/tutorials/2020/10/19/1.html">COMP109 - Tutorial 1</a></h1>
<p>This is following the questions from the tutorial for week 1.</p>

<p>The tutorial leader‚Äôs email is: <a href="mailto:p.austin@liverpool.ac.uk">p.austin@liverpool.ac.uk</a></p>

<h1 id="comp109---catch-up-session-2"><a href="/UoL/comp109/catch-up%20sessions/2020/10/19/1.html">COMP109 - Catch-up Session 2</a></h1>
<h2 id="methods-of-proof">Methods of Proof</h2>
<ul>
  <li>Counter Example Method
    <ul>
      <li>Prove that a statement is false by use of a counter-statement.</li>
    </ul>
  </li>
  <li>Universal Proof
    <ul>
      <li>Applies to all integers e.g. odd if \(a=2k+1\)</li>
    </ul>
  </li>
</ul>

<h2 id="example">Example</h2>
<p>\[(a+b)^2=a^2+b^2\]</p>

<p>Holds for:</p>

<ul>
  <li>Some integers</li>
  <li>All integers</li>
  <li>No integers</li>
</ul>

<p>The answer is that it holds for some integers as when \(a=0,\ b=0\). \[ (0+0)^2=0^2+0^2\] This also follows for \(a\neq0,\ b=0\).</p>

<p>The two proofs I gave as answers to the question count for both a counter example proof and a universal proof.</p>

<h2 id="example-of-proof-by-contradiction">Example of Proof by Contradiction</h2>
<p>Suppose for a proof by contradiction that \(P_n\) is the largest prime number. Therefore, \(P_1\ldots P_n\) are all the primes.</p>

<p>Consider \(P=P_1\times P_2\ldots P_n+1\)</p>

<p>Case 1: \(P_p\) is prime</p>

<p>Case 2: \(P_p\) not prime. Then \(P\) must have prime member.</p>

:ET